#pragma once
// This file has been generated by zoltan (https://github.com/jac3km4/zoltan)

/*
These patterns failed:
no matches for RED4ext::GameOptionManager::Get
no matches for RED4ext::IDynamicStorage::IDynamicStorage
no matches for RED4ext::GetGameSystemsData
no matches for RED4ext::LoadGameSystemsData
no matches for RED4ext::GameInstance::GameInstance
no matches for RED4ext::WidgetHudComponentInterface::WidgetHudComponentInterface
no matches for RED4ext::WidgetHudComponentInterface::~WidgetHudComponentInterface
no matches for RED4ext::appearance::AppearanceDefinition::AppearanceDefinition
no matches for RED4ext::audio::VehicleMetadata::GetEventData
no matches for RED4ext::physics::ProxyID::Something2
no matches for RED4ext::physics::ProxyID::GetKeyUnk37_0x40
no matches for RED4ext::physics::ProxyID::GetNbShapes
no matches for RED4ext::physics::ProxyID::UpdateProxyCacheEntry
too many matches for RED4ext::physics::ProxyID_GetGlobalPose (2)
no matches for RED4ext::physics::ProxyCacheID::EnableCollision
no matches for RED4ext::physics::ProxyCacheID::DisableCollision
too many matches for RED4ext::ent::VisualControllerComponent::GetAppearanceDependency (2)
no matches for RED4ext::game::VehicleSystem::SingleFixedStep
too many matches for RED4ext::game::VehicleSystem::Interpolation (2)
too many matches for RED4ext::game::VehicleSystem::PreUpdateAndPreMove (7)
too many matches for RED4ext::game::VehicleSystem::PostMove (2)
no matches for RED4ext::physics::GeometryCache::FreeKey
too many matches for RED4ext::physics::ProxyHelper::SetCMassLocalPose (10)
no matches for RED4ext::physics::ProxyHelper::UpdateGlobalPose
no matches for RED4ext::vehicle::ChassisComponent::Unknown1
no matches for RED4ext::vehicle::ChassisComponent::SetDampingToPoint4
no matches for RED4ext::vehicle::CameraManager::ShouldUseSomeListener
no matches for RED4ext::vehicle::CameraManager::Update
too many matches for RED4ext::world::EffectBlackboard::SetValue (2)
no matches for RED4ext::world::RuntimeSystemPhysics::FreeGeos
no matches for RED4ext::vehicle::Unk580::UpdateTPPinAudioSystem
no matches for RED4ext::vehicle::BikeBaseObject::EnableTiltControl
no matches for RED4ext::UpdateManager::UpdateStorage::FireCallback
too many matches for RED4ext::UpdateManager::Setup (2)
no matches for RED4ext::audio::UpdateParameterForEntityID
no matches for RED4ext::audio::UpdateGlobalParameter
no matches for RED4ext::audio::MetadataManager::MetadataManager
no matches for RED4ext::audio::MetadataManager::GetValueInMapForName
no matches for RED4ext::physics::VehiclePhysicsInsert1::ReferencePoseSetup
no matches for RED4ext::audio::Thing::GetEmitterPosition
no matches for RED4ext::audio::Thing::__anonymous8::AKAudioLoad
*/

#ifndef BaseStream_ReadWriteHandleID_Addr
#define BaseStream_ReadWriteHandleID_Addr 0x7117C0
#endif
#ifndef CClass_AddEventCallbackType_Addr
#define CClass_AddEventCallbackType_Addr 0x1F96B0
#endif
#ifndef CClass_ApplyFlags_Addr
#define CClass_ApplyFlags_Addr 0x1FD0C0
#endif
#ifndef CClass_SetupScriptCallbacks_Addr
#define CClass_SetupScriptCallbacks_Addr 0x1F9790
#endif
#ifndef CGameFramework_Systems_120_128_130_Addr
#define CGameFramework_Systems_120_128_130_Addr 0x13A19A0
#endif
#ifndef CMesh_GetParameterOfType_Addr
#define CMesh_GetParameterOfType_Addr 0xA10550
#endif
#ifndef CallbackManager_AddCallback_Addr
#define CallbackManager_AddCallback_Addr 0x2C1F4B0
#endif
#ifndef CallbackManager_AddToUnk00_Addr
#define CallbackManager_AddToUnk00_Addr 0x2C1F390
#endif
#ifndef CallbackManager_Unknown1_Addr
#define CallbackManager_Unknown1_Addr 0x2C1EE50
#endif
#ifndef CallbackManager_Unknown6_Addr
#define CallbackManager_Unknown6_Addr 0x2C1FC70
#endif
#ifndef GameInstance_SetRuntimeScene_Addr
#define GameInstance_SetRuntimeScene_Addr 0x2D605B0
#endif
#ifndef GameOptionManager_GetGameOption_Addr
#define GameOptionManager_GetGameOption_Addr 0x2BFB690
#endif
#ifndef GameOptionManager_SetGameOption_Addr
#define GameOptionManager_SetGameOption_Addr 0x2BFBD70
#endif
#ifndef IGameInstance_RegisterGameLoadCallbacks_Addr
#define IGameInstance_RegisterGameLoadCallbacks_Addr 0x2D60C60
#endif
#ifndef IGameInstance_RegisterStreamingWorldLoadedCallback_Addr
#define IGameInstance_RegisterStreamingWorldLoadedCallback_Addr 0x2D61180
#endif
#ifndef IGameInstance_Systems158_Addr
#define IGameInstance_Systems158_Addr 0x2D610F0
#endif
#ifndef IGameInstance_Systems160_Addr
#define IGameInstance_Systems160_Addr 0x2D610B0
#endif
#ifndef IGameInstance_Systems168o170_Addr
#define IGameInstance_Systems168o170_Addr 0x2D61780
#endif
#ifndef IGameInstance_Systems178_Addr
#define IGameInstance_Systems178_Addr 0x2D60AB0
#endif
#ifndef IGameInstance_WorldDetached_Addr
#define IGameInstance_WorldDetached_Addr 0x2D60A20
#endif
#ifndef IGameInstance_WorldPendingDetach_Addr
#define IGameInstance_WorldPendingDetach_Addr 0x2D61420
#endif
#ifndef ISerializable_SetOwner_Addr
#define ISerializable_SetOwner_Addr 0x1B0470
#endif
#ifndef Quaternion_GetYaw_Addr
#define Quaternion_GetYaw_Addr 0x65CD80
#endif
#ifndef Quaternion_ToEulerAngles_Addr
#define Quaternion_ToEulerAngles_Addr 0x558C20
#endif
#ifndef Quaternion_ToMatrix_Addr
#define Quaternion_ToMatrix_Addr 0x1CA130
#endif
#ifndef UpdatableSystems_SetRuntimeScene_Addr
#define UpdatableSystems_SetRuntimeScene_Addr 0xB9BDC0
#endif
#ifndef UpdateManager_IterateUnknown_Addr
#define UpdateManager_IterateUnknown_Addr 0xA91480
#endif
#ifndef UpdateManager_PrepareFiring_Addr
#define UpdateManager_PrepareFiring_Addr 0xA907C0
#endif
#ifndef UpdateManager_RegisterUpdate_Addr
#define UpdateManager_RegisterUpdate_Addr 0xA90EC0
#endif
#ifndef UpdateManager_ReleaseUnknown_Addr
#define UpdateManager_ReleaseUnknown_Addr 0xA90030
#endif
#ifndef UpdateManager_UpdateStorage_Copy_Addr
#define UpdateManager_UpdateStorage_Copy_Addr 0xA902B0
#endif
#ifndef UpdateManager_UpdateStorage_Copy_0_Addr
#define UpdateManager_UpdateStorage_Copy_0_Addr 0xA8FB10
#endif
#ifndef UpdateManagerHolder_RegisterBucketUpdate_Addr
#define UpdateManagerHolder_RegisterBucketUpdate_Addr 0xB21E30
#endif
#ifndef UpdateManagerHolder_Something_Addr
#define UpdateManagerHolder_Something_Addr 0xA90980
#endif
#ifndef UpdateManagerHolder_UpdateSystems_Addr
#define UpdateManagerHolder_UpdateSystems_Addr 0xA903B0
#endif
#ifndef action_ActionBase_Lock_Addr
#define action_ActionBase_Lock_Addr 0x3C5FD0
#endif
#ifndef action_ActionBase_StartWithReplicatedState_Addr
#define action_ActionBase_StartWithReplicatedState_Addr 0x1B2F9C0
#endif
#ifndef action_ActionInterface_EndActions_Addr
#define action_ActionInterface_EndActions_Addr 0x1B4D910
#endif
#ifndef action_ActionInterface_IsAnimationiActive_Addr
#define action_ActionInterface_IsAnimationiActive_Addr 0x1B4DAE0
#endif
#ifndef action_ActionInterface_ProcessActions_Addr
#define action_ActionInterface_ProcessActions_Addr 0x1B4DBE0
#endif
#ifndef audio_BankManager_LoadBank_Addr
#define audio_BankManager_LoadBank_Addr 0x2CB4B50
#endif
#ifndef audio_BankManager_LoadBanksMaybe_Addr
#define audio_BankManager_LoadBanksMaybe_Addr 0x2CB4930
#endif
#ifndef audio_BankManager_UnloadBank_Addr
#define audio_BankManager_UnloadBank_Addr 0x2CB6280
#endif
#ifndef audio_Emitters_GetEmitterForEntityID_Addr
#define audio_Emitters_GetEmitterForEntityID_Addr 0x2CAD910
#endif
#ifndef audio_Emitters_GetOrCreateEmitter_Addr
#define audio_Emitters_GetOrCreateEmitter_Addr 0x2CAD550
#endif
#ifndef audio_GameParameterStorage_GetValue_Addr
#define audio_GameParameterStorage_GetValue_Addr 0x2CACDC0
#endif
#ifndef audio_GameParameterStorage_SetValue_Addr
#define audio_GameParameterStorage_SetValue_Addr 0x2CACF30
#endif
#ifndef audio_MetadataManager__MetadataManager_Addr
#define audio_MetadataManager__MetadataManager_Addr 0x372520
#endif
#ifndef audio_Thing_UpdateEmitterPosition_Addr
#define audio_Thing_UpdateEmitterPosition_Addr 0x72F5F0
#endif
#ifndef ent_AnimatedComponent_GetReferencePoseMSForName_Addr
#define ent_AnimatedComponent_GetReferencePoseMSForName_Addr 0xFDCB40
#endif
#ifndef ent_ComponentsStorage_AddComponent_Addr
#define ent_ComponentsStorage_AddComponent_Addr 0x1055E10
#endif
#ifndef ent_ComponentsStorage_AddComponents_Addr
#define ent_ComponentsStorage_AddComponents_Addr 0x1055EF0
#endif
#ifndef ent_ComponentsStorage_FreeMemory_Addr
#define ent_ComponentsStorage_FreeMemory_Addr 0x1056030
#endif
#ifndef ent_ComponentsStorage_GetComponentByCRUID_Addr
#define ent_ComponentsStorage_GetComponentByCRUID_Addr 0x1056100
#endif
#ifndef ent_ComponentsStorage_GetSize_Addr
#define ent_ComponentsStorage_GetSize_Addr 0x8B2170
#endif
#ifndef ent_ComponentsStorage_IsEmpty_Addr
#define ent_ComponentsStorage_IsEmpty_Addr 0x10615E0
#endif
#ifndef ent_Entity_ReassembleAppearance_Addr
#define ent_Entity_ReassembleAppearance_Addr 0x1047050
#endif
#ifndef ent_Entity_SetupEntityAndComponents_Addr
#define ent_Entity_SetupEntityAndComponents_Addr 0x1046F30
#endif
#ifndef ent_Entity_SomethingListeners_Addr
#define ent_Entity_SomethingListeners_Addr 0x104DDE0
#endif
#ifndef ent_IComponent_SetEntity_Addr
#define ent_IComponent_SetEntity_Addr 0x10542F0
#endif
#ifndef ent_MeshComponent_Load_Addr
#define ent_MeshComponent_Load_Addr 0x10A88D0
#endif
#ifndef ent_PhysicalMeshComponent_ProcessSystemResource_Addr
#define ent_PhysicalMeshComponent_ProcessSystemResource_Addr 0x10C8A10
#endif
#ifndef ent_SlotComponent_GetLocalSlotTransformFromIndex_Addr
#define ent_SlotComponent_GetLocalSlotTransformFromIndex_Addr 0x115DC00
#endif
#ifndef ent_SlotComponent_GetSlotGlobalTransform_Addr
#define ent_SlotComponent_GetSlotGlobalTransform_Addr 0x115D2A0
#endif
#ifndef ent_SlotComponent_GetSlotIndex_Addr
#define ent_SlotComponent_GetSlotIndex_Addr 0x115D150
#endif
#ifndef ent_SlotComponent_GetSlotLocalTransform_Addr
#define ent_SlotComponent_GetSlotLocalTransform_Addr 0x115D8A0
#endif
#ifndef ent_VisualControllerComponent_LoadUnkD8_Addr
#define ent_VisualControllerComponent_LoadUnkD8_Addr 0x1190870
#endif
#ifndef ent_VisualControllerComponent_Set0xF4_Addr
#define ent_VisualControllerComponent_Set0xF4_Addr 0x118EE00
#endif
#ifndef ent_VisualControllerComponent_Unknown_Addr
#define ent_VisualControllerComponent_Unknown_Addr 0x118ECC0
#endif
#ifndef game_CActionsFactory_AddActionTypeManual_Addr
#define game_CActionsFactory_AddActionTypeManual_Addr 0x29A2480
#endif
#ifndef game_GameAudioSystem_SetGlobalParameter_Addr
#define game_GameAudioSystem_SetGlobalParameter_Addr 0x72E4F0
#endif
#ifndef game_GameAudioSystem_UpdateParameter_Addr
#define game_GameAudioSystem_UpdateParameter_Addr 0x732D10
#endif
#ifndef game_IGameSystem_SetGameInstance_Addr
#define game_IGameSystem_SetGameInstance_Addr 0xAF7040
#endif
#ifndef game_IGameSystem_Unset_Addr
#define game_IGameSystem_Unset_Addr 0xAF70D0
#endif
#ifndef game_Object_CallScriptFunction_Addr
#define game_Object_CallScriptFunction_Addr 0x1404190
#endif
#ifndef game_VehicleSystem_BeginUpdate_Addr
#define game_VehicleSystem_BeginUpdate_Addr 0x1CE37A0
#endif
#ifndef game_VehicleSystem_UpdateVehicleArrays_Addr
#define game_VehicleSystem_UpdateVehicleArrays_Addr 0x1CE6FD0
#endif
#ifndef physics_ColliderSphere_createHandleWithRadius_Addr
#define physics_ColliderSphere_createHandleWithRadius_Addr 0x42DA20
#endif
#ifndef physics_FilterData_LoadPreset_Addr
#define physics_FilterData_LoadPreset_Addr 0x43D2C0
#endif
#ifndef physics_GeometryCache_FreeAlwaysLoaded_Addr
#define physics_GeometryCache_FreeAlwaysLoaded_Addr 0x442CC0
#endif
#ifndef physics_GeometryCache_FreeGeometryKey_Addr
#define physics_GeometryCache_FreeGeometryKey_Addr 0x442FB0
#endif
#ifndef physics_GeometryCache_FreeSector_Addr
#define physics_GeometryCache_FreeSector_Addr 0x443160
#endif
#ifndef physics_GeometryCache_HasGeometryKey_Addr
#define physics_GeometryCache_HasGeometryKey_Addr 0x443340
#endif
#ifndef physics_GeometryCache_LoadAlwaysloadedSectorGeometries_Addr
#define physics_GeometryCache_LoadAlwaysloadedSectorGeometries_Addr 0x440CC0
#endif
#ifndef physics_GeometryCache_LoadAlwaysloadedSectorGeometriesSetup_Addr
#define physics_GeometryCache_LoadAlwaysloadedSectorGeometriesSetup_Addr 0x443680
#endif
#ifndef physics_GeometryCache_LoadSectorGeometries_Addr
#define physics_GeometryCache_LoadSectorGeometries_Addr 0x4406C0
#endif
#ifndef physics_GeometryCache_LoadSectorGeometriesSetup_Addr
#define physics_GeometryCache_LoadSectorGeometriesSetup_Addr 0x4439E0
#endif
#ifndef physics_GeometryCache_Unknown_Addr
#define physics_GeometryCache_Unknown_Addr 0x443610
#endif
#ifndef physics_GeometryCache_sub_7FF75B921520_Addr
#define physics_GeometryCache_sub_7FF75B921520_Addr 0x441E50
#endif
#ifndef physics_GeometryCache_sub_7FF75B922410_Addr
#define physics_GeometryCache_sub_7FF75B922410_Addr 0x442D40
#endif
#ifndef physics_GetShapeLocalPos_Addr
#define physics_GetShapeLocalPos_Addr 0x44B130
#endif
#ifndef physics_ProxyCache_AddToCache_Addr
#define physics_ProxyCache_AddToCache_Addr 0x46BAF0
#endif
#ifndef physics_ProxyCache_GetDataFromCache_Addr
#define physics_ProxyCache_GetDataFromCache_Addr 0x4B8BC0
#endif
#ifndef physics_ProxyCache_GetFromCacheOrGet_Addr
#define physics_ProxyCache_GetFromCacheOrGet_Addr 0x46B8D0
#endif
#ifndef physics_ProxyCacheManager_Unk948_Kick_Addr
#define physics_ProxyCacheManager_Unk948_Kick_Addr 0x498880
#endif
#ifndef physics_ProxyHelper_Create_Addr
#define physics_ProxyHelper_Create_Addr 0x447640
#endif
#ifndef physics_ProxyHelper_GetThingWithLock_Addr
#define physics_ProxyHelper_GetThingWithLock_Addr 0x4475B0
#endif
#ifndef physics_ProxyHelper_SetAngularDamping_Addr
#define physics_ProxyHelper_SetAngularDamping_Addr 0x44C100
#endif
#ifndef physics_ProxyHelper_SetCCD_Addr
#define physics_ProxyHelper_SetCCD_Addr 0x44E470
#endif
#ifndef physics_ProxyHelper_SetGravity_Addr
#define physics_ProxyHelper_SetGravity_Addr 0x44CA30
#endif
#ifndef physics_ProxyHelper_SetIsQueryable_Addr
#define physics_ProxyHelper_SetIsQueryable_Addr 0x44CC30
#endif
#ifndef physics_ProxyHelper_SetLinearDamping_Addr
#define physics_ProxyHelper_SetLinearDamping_Addr 0x44CF50
#endif
#ifndef physics_ProxyHelper_SetMassAndUpdateInertia_Addr
#define physics_ProxyHelper_SetMassAndUpdateInertia_Addr 0x44D350
#endif
#ifndef physics_ProxyHelper_SetQueryFilterData_Addr
#define physics_ProxyHelper_SetQueryFilterData_Addr 0x44D9B0
#endif
#ifndef physics_ProxyHelper_SetSimulationFilterData_Addr
#define physics_ProxyHelper_SetSimulationFilterData_Addr 0x44DDB0
#endif
#ifndef physics_ProxyHelper_SetSimulationShape_Addr
#define physics_ProxyHelper_SetSimulationShape_Addr 0x44CD40
#endif
#ifndef physics_ProxyHelper_Unlock_Addr
#define physics_ProxyHelper_Unlock_Addr 0x4476C0
#endif
#ifndef physics_ProxyHelper_UpdateProxyCache_Addr
#define physics_ProxyHelper_UpdateProxyCache_Addr 0x448420
#endif
#ifndef physics_ProxyID_GetProxy_Addr
#define physics_ProxyID_GetProxy_Addr 0x46BA70
#endif
#ifndef physics_ProxyID_ProcessProxyDesc_Addr
#define physics_ProxyID_ProcessProxyDesc_Addr 0x449720
#endif
#ifndef physics_ProxyID_Unk_Addr
#define physics_ProxyID_Unk_Addr 0x449500
#endif
#ifndef physics_ProxyManager_GetProxyCache_Addr
#define physics_ProxyManager_GetProxyCache_Addr 0x46AE90
#endif
#ifndef physics_ProxyManager_GetProxyHandle_Addr
#define physics_ProxyManager_GetProxyHandle_Addr 0x46AD40
#endif
#ifndef physics_ProxyManager_HasProxy_Addr
#define physics_ProxyManager_HasProxy_Addr 0x46B110
#endif
#ifndef physics_ProxyManager_SetProxyCacheID_Addr
#define physics_ProxyManager_SetProxyCacheID_Addr 0x46B480
#endif
#ifndef physics_ProxyManager_TestUnk2E2068_Addr
#define physics_ProxyManager_TestUnk2E2068_Addr 0x46B110
#endif
#ifndef physics_SystemResource_GetFromCMesh_Addr
#define physics_SystemResource_GetFromCMesh_Addr 0xA34E90
#endif
#ifndef physics_VehiclePhysicsInsert1_SinMath_Addr
#define physics_VehiclePhysicsInsert1_SinMath_Addr 0x1D5B1D0
#endif
#ifndef physics_VehiclePhysicsInsert2_SetsUnk160Unk15C_Addr
#define physics_VehiclePhysicsInsert2_SetsUnk160Unk15C_Addr 0x1D517B0
#endif
#ifndef physics_pxRigidBody_Get_Addr
#define physics_pxRigidBody_Get_Addr 0x4B9080
#endif
#ifndef physics_pxRigidBody_Update_Addr
#define physics_pxRigidBody_Update_Addr 0x4B9EA0
#endif
#ifndef vehicle_AirControl_ApplyTorque_Addr
#define vehicle_AirControl_ApplyTorque_Addr 0x1D0F880
#endif
#ifndef vehicle_AirControl_GetAngularVelocity_Addr
#define vehicle_AirControl_GetAngularVelocity_Addr 0x1D106C0
#endif
#ifndef vehicle_AirControl_Process_Addr
#define vehicle_AirControl_Process_Addr 0x1D11360
#endif
#ifndef vehicle_BaseObject_CheckPhysicsStateActionInterface_Addr
#define vehicle_BaseObject_CheckPhysicsStateActionInterface_Addr 0x1C8CC40
#endif
#ifndef vehicle_BaseObject_CreateAction_Addr
#define vehicle_BaseObject_CreateAction_Addr 0x1C8AD00
#endif
#ifndef vehicle_BaseObject_GetCurveSetData_Addr
#define vehicle_BaseObject_GetCurveSetData_Addr 0x1C7AA10
#endif
#ifndef vehicle_BaseObject_GetDeceleration_Addr
#define vehicle_BaseObject_GetDeceleration_Addr 0x737680
#endif
#ifndef vehicle_BaseObject_GetDisplayName_Addr
#define vehicle_BaseObject_GetDisplayName_Addr 0x1C7A7D0
#endif
#ifndef vehicle_BaseObject_GetGravitationalForce_Addr
#define vehicle_BaseObject_GetGravitationalForce_Addr 0x1C7A7A0
#endif
#ifndef vehicle_BaseObject_GetInverseMass_Addr
#define vehicle_BaseObject_GetInverseMass_Addr 0x1C7A790
#endif
#ifndef vehicle_BaseObject_GetPhysicsData_Addr
#define vehicle_BaseObject_GetPhysicsData_Addr 0x737670
#endif
#ifndef vehicle_BaseObject_GetTotalMass_Addr
#define vehicle_BaseObject_GetTotalMass_Addr 0x1C7A780
#endif
#ifndef vehicle_BaseObject_GetUnk60C_Addr
#define vehicle_BaseObject_GetUnk60C_Addr 0x1C7A7C0
#endif
#ifndef vehicle_BaseObject_GetUnk8E0_Addr
#define vehicle_BaseObject_GetUnk8E0_Addr 0x1C76680
#endif
#ifndef vehicle_BaseObject_GetVehicleSystem_Addr
#define vehicle_BaseObject_GetVehicleSystem_Addr 0x1C7AB90
#endif
#ifndef vehicle_BaseObject_GetWeaponOrientation_Addr
#define vehicle_BaseObject_GetWeaponOrientation_Addr 0x1C7ABC0
#endif
#ifndef vehicle_BaseObject_HornForDuration_Addr
#define vehicle_BaseObject_HornForDuration_Addr 0x1C7B570
#endif
#ifndef vehicle_BaseObject_HornForDurationDelayed_Addr
#define vehicle_BaseObject_HornForDurationDelayed_Addr 0x1C7B7D0
#endif
#ifndef vehicle_BaseObject_PostMovePhysicsStateNotZero_Addr
#define vehicle_BaseObject_PostMovePhysicsStateNotZero_Addr 0x1C823E0
#endif
#ifndef vehicle_BaseObject_PostMovePhysicsStateZero_Addr
#define vehicle_BaseObject_PostMovePhysicsStateZero_Addr 0x1C821F0
#endif
#ifndef vehicle_BaseObject_PreUpdatePreMovePhysicsStateNotZero_Addr
#define vehicle_BaseObject_PreUpdatePreMovePhysicsStateNotZero_Addr 0x1C83140
#endif
#ifndef vehicle_BaseObject_PreUpdatePreMovePhysicsStateZero_Addr
#define vehicle_BaseObject_PreUpdatePreMovePhysicsStateZero_Addr 0x1C82E40
#endif
#ifndef vehicle_BaseObject_Reset8B4_Addr
#define vehicle_BaseObject_Reset8B4_Addr 0x1C765A0
#endif
#ifndef vehicle_BaseObject_SetPhysicsState_Addr
#define vehicle_BaseObject_SetPhysicsState_Addr 0x1C8DBB0
#endif
#ifndef vehicle_BaseObject_UnsetPhysicsStates_Addr
#define vehicle_BaseObject_UnsetPhysicsStates_Addr 0x1C798D0
#endif
#ifndef vehicle_BaseObject_UpdatePhysicsSleepState_Addr
#define vehicle_BaseObject_UpdatePhysicsSleepState_Addr 0x1C832C0
#endif
#ifndef vehicle_BikePhysics_AnimationUpdate_Addr
#define vehicle_BikePhysics_AnimationUpdate_Addr 0x1D33D30
#endif
#ifndef vehicle_CameraManager_ChangeCamera_Addr
#define vehicle_CameraManager_ChangeCamera_Addr 0x1C95360
#endif
#ifndef vehicle_CameraManager_IsTPP_Addr
#define vehicle_CameraManager_IsTPP_Addr 0x1C976E0
#endif
#ifndef vehicle_CarPhysics_AnimationUpdate_Addr
#define vehicle_CarPhysics_AnimationUpdate_Addr 0x1D394B0
#endif
#ifndef vehicle_ChassisComponent_BigUpdate_Addr
#define vehicle_ChassisComponent_BigUpdate_Addr 0x1C9EF60
#endif
#ifndef vehicle_ChassisComponent_GetCollisionShapes_Addr
#define vehicle_ChassisComponent_GetCollisionShapes_Addr 0x1C9D520
#endif
#ifndef vehicle_ChassisComponent_GetProxyHelperAndLock_Addr
#define vehicle_ChassisComponent_GetProxyHelperAndLock_Addr 0x1C9D190
#endif
#ifndef vehicle_ChassisComponent_SetFilterData_Addr
#define vehicle_ChassisComponent_SetFilterData_Addr 0x1C9CC50
#endif
#ifndef vehicle_ChassisComponent_SomethingIfEnabled_Addr
#define vehicle_ChassisComponent_SomethingIfEnabled_Addr 0x1C9EBE0
#endif
#ifndef vehicle_ChassisComponent_TransformWorldTransform_Addr
#define vehicle_ChassisComponent_TransformWorldTransform_Addr 0x1C9C820
#endif
#ifndef vehicle_ChassisComponent_Update_Addr
#define vehicle_ChassisComponent_Update_Addr 0x1CA0790
#endif
#ifndef vehicle_ChassisComponent_UpdatePhysicsState_Addr
#define vehicle_ChassisComponent_UpdatePhysicsState_Addr 0x1C9E890
#endif
#ifndef vehicle_PID_GetCorrection_Addr
#define vehicle_PID_GetCorrection_Addr 0x1D36140
#endif
#ifndef vehicle_PID_Initialize_Addr
#define vehicle_PID_Initialize_Addr 0x1D36150
#endif
#ifndef vehicle_PID_Process_Addr
#define vehicle_PID_Process_Addr 0x1D36170
#endif
#ifndef vehicle_PID_Reset_Addr
#define vehicle_PID_Reset_Addr 0x1D36130
#endif
#ifndef vehicle_PID_UpdatePID_Addr
#define vehicle_PID_UpdatePID_Addr 0x1D36120
#endif
#ifndef vehicle_PersistentDataPS_ResetQuestEnforceTransform_Addr
#define vehicle_PersistentDataPS_ResetQuestEnforceTransform_Addr 0x1CD1A10
#endif
#ifndef vehicle_PersistentDataPS_UpdateWheelRuntime_Addr
#define vehicle_PersistentDataPS_UpdateWheelRuntime_Addr 0x1CD2FB0
#endif
#ifndef vehicle_Physics_ComputeSleep_Addr
#define vehicle_Physics_ComputeSleep_Addr 0x1D1A5A0
#endif
#ifndef vehicle_Physics_GetSomethingWaterParams_Addr
#define vehicle_Physics_GetSomethingWaterParams_Addr 0x1D18C20
#endif
#ifndef vehicle_Physics_GetVehicle_Addr
#define vehicle_Physics_GetVehicle_Addr 0x36D770
#endif
#ifndef vehicle_Physics_IsInAirFromVehicle_func_Addr
#define vehicle_Physics_IsInAirFromVehicle_func_Addr 0x1D40710
#endif
#ifndef vehicle_Physics_LoadHasBeenFlippedOver_Addr
#define vehicle_Physics_LoadHasBeenFlippedOver_Addr 0x1D196F0
#endif
#ifndef vehicle_Physics_ReadWorldTransform_Addr
#define vehicle_Physics_ReadWorldTransform_Addr 0x1D188B0
#endif
#ifndef vehicle_Physics_SetUnkA0ToOne_Addr
#define vehicle_Physics_SetUnkA0ToOne_Addr 0x1D19820
#endif
#ifndef vehicle_Physics_UpdateDataWorldTransform_Addr
#define vehicle_Physics_UpdateDataWorldTransform_Addr 0x1D18670
#endif
#ifndef vehicle_PhysicsData_AddTorque_Addr
#define vehicle_PhysicsData_AddTorque_Addr 0x1D0DF80
#endif
#ifndef vehicle_PhysicsData_ApplyForceAtPosition_Addr
#define vehicle_PhysicsData_ApplyForceAtPosition_Addr 0x1D0DDA0
#endif
#ifndef vehicle_PhysicsData_ApplyTorqueAtPosition_Addr
#define vehicle_PhysicsData_ApplyTorqueAtPosition_Addr 0x1D0D7A0
#endif
#ifndef vehicle_PhysicsData_SetUsesNormalChassisMass_Addr
#define vehicle_PhysicsData_SetUsesNormalChassisMass_Addr 0x1D0E200
#endif
#ifndef vehicle_PhysicsData_UpdateChassis_Addr
#define vehicle_PhysicsData_UpdateChassis_Addr 0x1D0DEC0
#endif
#ifndef vehicle_PhysicsData_UsesAlternativeChassisMass_Addr
#define vehicle_PhysicsData_UsesAlternativeChassisMass_Addr 0x1D0E830
#endif
#ifndef vehicle_TPPCameraComponent_GetLocationFromOffset_Addr
#define vehicle_TPPCameraComponent_GetLocationFromOffset_Addr 0x1CF1770
#endif
#ifndef vehicle_TPPCameraComponent_GetYaw_Addr
#define vehicle_TPPCameraComponent_GetYaw_Addr 0x1CF6270
#endif
#ifndef vehicle_TPPCameraComponent_TargetedCameraInterface_Update_Addr
#define vehicle_TPPCameraComponent_TargetedCameraInterface_Update_Addr 0x1CF4D10
#endif
#ifndef vehicle_TPPCameraComponent_TargetedCameraInterface_sub_58_Addr
#define vehicle_TPPCameraComponent_TargetedCameraInterface_sub_58_Addr 0x1CF2ED0
#endif
#ifndef vehicle_TPPCameraComponent_UpdateData_Addr
#define vehicle_TPPCameraComponent_UpdateData_Addr 0x1CF46D0
#endif
#ifndef vehicle_TPPCameraComponent_UpdatePitch_Addr
#define vehicle_TPPCameraComponent_UpdatePitch_Addr 0x1CF6870
#endif
#ifndef vehicle_TPPCameraComponent_UpdatePosition_Addr
#define vehicle_TPPCameraComponent_UpdatePosition_Addr 0x1CF5430
#endif
#ifndef vehicle_TPPCameraComponent_UpdateTPP_Addr
#define vehicle_TPPCameraComponent_UpdateTPP_Addr 0x1CF5270
#endif
#ifndef vehicle_Unk568_CopyOverCollisionForce_Addr
#define vehicle_Unk568_CopyOverCollisionForce_Addr 0x1AE1700
#endif
#ifndef vehicle_Unk568_SetAcceleration_Addr
#define vehicle_Unk568_SetAcceleration_Addr 0x1AE1740
#endif
#ifndef vehicle_Unk568_SetLinearVelocityEtc_Addr
#define vehicle_Unk568_SetLinearVelocityEtc_Addr 0x1AE1990
#endif
#ifndef vehicle_Unk568_SetUnkD0_Addr
#define vehicle_Unk568_SetUnkD0_Addr 0x1AE1720
#endif
#ifndef vehicle_Unk568_Unk568_Addr
#define vehicle_Unk568_Unk568_Addr 0x1AE07B0
#endif
#ifndef vehicle_Unk570_GetCollisionFxForMaterial_Addr
#define vehicle_Unk570_GetCollisionFxForMaterial_Addr 0x1D24C60
#endif
#ifndef vehicle_Unk570_GetFxForMaterial_Addr
#define vehicle_Unk570_GetFxForMaterial_Addr 0x1D24DE0
#endif
#ifndef vehicle_Unk570_GetSmearFxForMaterial_Addr
#define vehicle_Unk570_GetSmearFxForMaterial_Addr 0x1D24D50
#endif
#ifndef vehicle_Unk570_ProcessEffects_Addr
#define vehicle_Unk570_ProcessEffects_Addr 0x1D2AE00
#endif
#ifndef vehicle_Unk570_ProcessImpactScratch_Addr
#define vehicle_Unk570_ProcessImpactScratch_Addr 0x1D26510
#endif
#ifndef vehicle_Unk570_Setup_Addr
#define vehicle_Unk570_Setup_Addr 0x1D28650
#endif
#ifndef vehicle_Unk570_SkidMarkEffectStart_Addr
#define vehicle_Unk570_SkidMarkEffectStart_Addr 0x1D2B9D0
#endif
#ifndef vehicle_Unk570_TireTrackEffectStart_Addr
#define vehicle_Unk570_TireTrackEffectStart_Addr 0x1D2C330
#endif
#ifndef vehicle_Unk570_UpdateEffectsBlackboard_Addr
#define vehicle_Unk570_UpdateEffectsBlackboard_Addr 0x1D27C80
#endif
#ifndef vehicle_Unk570_WheelEffectUpdate_Addr
#define vehicle_Unk570_WheelEffectUpdate_Addr 0x1D2AE00
#endif
#ifndef vehicle_Unk580_GetAudioResourceMetadata_Addr
#define vehicle_Unk580_GetAudioResourceMetadata_Addr 0x1C644A0
#endif
#ifndef vehicle_Unk580_IsRadioReceiverActive_Addr
#define vehicle_Unk580_IsRadioReceiverActive_Addr 0x1C65250
#endif
#ifndef vehicle_Unk580_NextRadioReceiverStation_Addr
#define vehicle_Unk580_NextRadioReceiverStation_Addr 0x1C67B60
#endif
#ifndef vehicle_Unk580_SetRadioTier_Addr
#define vehicle_Unk580_SetRadioTier_Addr 0x1C67CA0
#endif
#ifndef vehicle_Unk580_ShouldUseSomeAVListener_Addr
#define vehicle_Unk580_ShouldUseSomeAVListener_Addr 0x1C63EE0
#endif
#ifndef vehicle_Unk580_ToggleHorn_Addr
#define vehicle_Unk580_ToggleHorn_Addr 0x1C65AD0
#endif
#ifndef vehicle_Unk580_Update_Addr
#define vehicle_Unk580_Update_Addr 0x1C69470
#endif
#ifndef vehicle_Unk580_Update3CA_Addr
#define vehicle_Unk580_Update3CA_Addr 0x1C67480
#endif
#ifndef vehicle_Unk580_UpdateEvents_Addr
#define vehicle_Unk580_UpdateEvents_Addr 0x1C6B170
#endif
#ifndef vehicle_Unk580_UpdateTireParameters_Addr
#define vehicle_Unk580_UpdateTireParameters_Addr 0x1C63440
#endif
#ifndef vehicle_Unk580_UpdateWheelEmitters_Addr
#define vehicle_Unk580_UpdateWheelEmitters_Addr 0x1C690E0
#endif
#ifndef vehicle_Unk588_Unknown_Addr
#define vehicle_Unk588_Unknown_Addr 0x1C6CEF0
#endif
#ifndef vehicle_Unk588_UpdateTransform_Addr
#define vehicle_Unk588_UpdateTransform_Addr 0x1C6DCE0
#endif
#ifndef vehicle_UnkD10_Reset_Addr
#define vehicle_UnkD10_Reset_Addr 0x1D3F3A0
#endif
#ifndef vehicle_WheeledPhysics_ApplyWaterResistance_Addr
#define vehicle_WheeledPhysics_ApplyWaterResistance_Addr 0x1D57E60
#endif
#ifndef vehicle_WheeledPhysics_FixedUpdate_Addr
#define vehicle_WheeledPhysics_FixedUpdate_Addr 0x1D3F260
#endif
#ifndef vehicle_WheeledPhysics_FourWheelTorque_Addr
#define vehicle_WheeledPhysics_FourWheelTorque_Addr 0x1D3BAF0
#endif
#ifndef vehicle_WheeledPhysics_FourWheelTorqueStuff_Addr
#define vehicle_WheeledPhysics_FourWheelTorqueStuff_Addr 0x1D3CEA0
#endif
#ifndef vehicle_WheeledPhysics_GetEnergy_Addr
#define vehicle_WheeledPhysics_GetEnergy_Addr 0x1D40020
#endif
#ifndef vehicle_WheeledPhysics_GetNumberOfWheelsTouchingGround_Addr
#define vehicle_WheeledPhysics_GetNumberOfWheelsTouchingGround_Addr 0x1D40190
#endif
#ifndef vehicle_WheeledPhysics_ProcessAirControl_Addr
#define vehicle_WheeledPhysics_ProcessAirControl_Addr 0x1D17990
#endif
#ifndef vehicle_WheeledPhysics_SetIsMovingOthers_Addr
#define vehicle_WheeledPhysics_SetIsMovingOthers_Addr 0x1D19F70
#endif
#ifndef vehicle_WheeledPhysics_SetupInsert_Addr
#define vehicle_WheeledPhysics_SetupInsert_Addr 0x1D44D30
#endif
#ifndef vehicle_WheeledPhysics_SomethingWheelRayTrace_Addr
#define vehicle_WheeledPhysics_SomethingWheelRayTrace_Addr 0x1D41370
#endif
#ifndef vehicle_WheeledPhysics_SomethingWheels_Addr
#define vehicle_WheeledPhysics_SomethingWheels_Addr 0x1D45F50
#endif
#ifndef vehicle_WheeledPhysics_TurningRollFactorStuff_Addr
#define vehicle_WheeledPhysics_TurningRollFactorStuff_Addr 0x1D45130
#endif
#ifndef vehicle_WheeledPhysics_Unk15CStuff_Addr
#define vehicle_WheeledPhysics_Unk15CStuff_Addr 0x1D3FDA0
#endif
#ifndef vehicle_WheeledPhysics_Update_Addr
#define vehicle_WheeledPhysics_Update_Addr 0x1D45B90
#endif
#ifndef vehicle_WheeledPhysics_UpdatePassengerAnim_Addr
#define vehicle_WheeledPhysics_UpdatePassengerAnim_Addr 0x1D3EC70
#endif
#ifndef world_RuntimeScene_SetupWithLogging_Addr
#define world_RuntimeScene_SetupWithLogging_Addr 0xB868D0
#endif

#include <RED4ext/RED4ext.hpp>
#include <RED4ext/Relocation.hpp>
#include <RED4ext/IO/BaseStream.hpp>
#include <RED4ext/RTTITypes.hpp>
#include <RED4ext/GameEngine.hpp>
#include <RED4ext/Scripting/Natives/Generated/CMesh.hpp>
#include <RED4ext/Scripting/Natives/Callbacks.hpp>
#include <RED4ext/Scripting/Natives/GameInstance.hpp>
#include <RED4ext/GameOptions.hpp>
#include <RED4ext/Scripting/Natives/IGameInstance.hpp>
#include <RED4ext/ISerializable.hpp>
#include <RED4ext/Scripting/Natives/Generated/Quaternion.hpp>
#include <RED4ext/Scripting/Natives/GameInstance.hpp>
#include <RED4ext/Scripting/Natives/UpdateManager.hpp>
#include <RED4ext/Scripting/Natives/actionActionBase.hpp>
#include <RED4ext/Scripting/Natives/actionActionInterface.hpp>
#include <RED4ext/Scripting/Natives/audioBankManager.hpp>
#include <RED4ext/Scripting/Natives/audioEmitter.hpp>
#include <RED4ext/Scripting/Natives/audioMetadataManager.hpp>
#include <RED4ext/Scripting/Natives/audioThing.hpp>
#include <RED4ext/Scripting/Natives/Generated/ent/AnimatedComponent.hpp>
#include <RED4ext/Scripting/Natives/entComponentsStorage.hpp>
#include <RED4ext/Scripting/Natives/entEntity.hpp>
#include <RED4ext/Scripting/Natives/entIComponent.hpp>
#include <RED4ext/Scripting/Natives/Generated/ent/MeshComponent.hpp>
#include <RED4ext/Scripting/Natives/Generated/ent/PhysicalMeshComponent.hpp>
#include <RED4ext/Scripting/Natives/Generated/ent/SlotComponent.hpp>
#include <RED4ext/Scripting/Natives/Generated/ent/VisualControllerComponent.hpp>
#include <RED4ext/Scripting/Natives/Generated/game/CActionsFactory.hpp>
#include <RED4ext/Scripting/Natives/Generated/game/GameAudioSystem.hpp>
#include <RED4ext/Scripting/Natives/gameIGameSystem.hpp>
#include <RED4ext/Scripting/Natives/gameObject.hpp>
#include <RED4ext/Scripting/Natives/gameVehicleSystem.hpp>
#include <RED4ext/Scripting/Natives/Generated/physics/ColliderSphere.hpp>
#include <RED4ext/Scripting/Natives/Generated/physics/FilterData.hpp>
#include <RED4ext/Scripting/Natives/Generated/physics/GeometryCache.hpp>
#include <RED4ext/Scripting/Natives/physicsBaseProxy.hpp>
#include <RED4ext/Scripting/Natives/physicsProxyCache.hpp>
#include <RED4ext/Scripting/Natives/physicsProxyHelper.hpp>
#include <RED4ext/Scripting/Natives/physicsProxyID.hpp>
#include <RED4ext/Scripting/Natives/physicsProxyManager.hpp>
#include <RED4ext/Scripting/Natives/Generated/physics/SystemResource.hpp>
#include <RED4ext/Scripting/Natives/vehiclePhysicsInsert1.hpp>
#include <RED4ext/Scripting/Natives/vehiclePhysicsInsert2.hpp>
#include <RED4ext/Scripting/Natives/physicsBaseProxy.hpp>
#include <RED4ext/Scripting/Natives/vehicleAirControl.hpp>
#include <RED4ext/Scripting/Natives/vehicleBaseObject.hpp>
#include <RED4ext/Scripting/Natives/vehiclePhysics.hpp>
#include <RED4ext/Scripting/Natives/vehicleCameraManager.hpp>
#include <RED4ext/Scripting/Natives/vehiclePhysics.hpp>
#include <RED4ext/Scripting/Natives/vehicleChassisComponent.hpp>
#include <RED4ext/Scripting/Natives/vehiclePID.hpp>
#include <RED4ext/Scripting/Natives/Generated/vehicle/PersistentDataPS.hpp>
#include <RED4ext/Scripting/Natives/vehiclePhysics.hpp>
#include <RED4ext/Scripting/Natives/vehiclePhysicsData.hpp>
#include <RED4ext/Scripting/Natives/Generated/vehicle/TPPCameraComponent.hpp>
#include <RED4ext/Scripting/Natives/vehicleBaseObject.hpp>
#include <RED4ext/Scripting/Natives/vehiclePhysics.hpp>
#include <RED4ext/Scripting/Natives/worldRuntimeScene.hpp>

RED4EXT_INLINE void RED4ext::BaseStream::ReadWriteHandleID(RED4ext::Handle<void>* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::BaseStream::ReadWriteHandleID)> call(BaseStream_ReadWriteHandleID_Addr);
    return call(this, a1);
}

RED4EXT_INLINE uint32_t RED4ext::CClass::AddEventCallbackType(RED4ext::CName a1, RED4ext::CClass* a2, RED4ext::CallbackDefinition* a3) {
    RED4ext::RelocFunc<decltype(&RED4ext::CClass::AddEventCallbackType)> call(CClass_AddEventCallbackType_Addr);
    return call(this, a1, a2, a3);
}

RED4EXT_INLINE void RED4ext::CClass::ApplyFlags(RED4ext::CClass::Flags a1, bool a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::CClass::ApplyFlags)> call(CClass_ApplyFlags_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE uint32_t RED4ext::CClass::SetupScriptCallbacks() {
    RED4ext::RelocFunc<decltype(&RED4ext::CClass::SetupScriptCallbacks)> call(CClass_SetupScriptCallbacks_Addr);
    return call(this);
}

RED4EXT_INLINE uint64_t RED4ext::CGameFramework::Systems_120_128_130() {
    RED4ext::RelocFunc<decltype(&RED4ext::CGameFramework::Systems_120_128_130)> call(CGameFramework_Systems_120_128_130_Addr);
    return call(this);
}

RED4EXT_INLINE RED4ext::Handle<RED4ext::mesh::MeshParameter>* RED4ext::CMesh::GetParameterOfType(RED4ext::Handle<RED4ext::mesh::MeshParameter>* a1, RED4ext::CClass* a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::CMesh::GetParameterOfType)> call(CMesh_GetParameterOfType_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE uint16_t RED4ext::CallbackManager::AddCallback(RED4ext::CallbackInstance* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::CallbackManager::AddCallback)> call(CallbackManager_AddCallback_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::CallbackManager::AddToUnk00(RED4ext::Handle<RED4ext::IScriptable>* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::CallbackManager::AddToUnk00)> call(CallbackManager_AddToUnk00_Addr);
    return call(this, a1);
}

RED4EXT_INLINE int64_t RED4ext::CallbackManager::Unknown1(uint16_t a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::CallbackManager::Unknown1)> call(CallbackManager_Unknown1_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::CallbackManager::Unknown6(RED4ext::CClass* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::CallbackManager::Unknown6)> call(CallbackManager_Unknown6_Addr);
    return call(this, a1);
}

RED4EXT_INLINE int64_t RED4ext::GameInstance::SetRuntimeScene(RED4ext::world::RuntimeScene* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::GameInstance::SetRuntimeScene)> call(GameInstance_SetRuntimeScene_Addr);
    return call(this, a1);
}

RED4EXT_INLINE bool RED4ext::GameOptionManager::GetGameOption(const uint8_t* a1, const uint8_t* a2, RED4ext::CString& a3) {
    RED4ext::RelocFunc<decltype(&RED4ext::GameOptionManager::GetGameOption)> call(GameOptionManager_GetGameOption_Addr);
    return call(this, a1, a2, a3);
}

RED4EXT_INLINE bool RED4ext::GameOptionManager::SetGameOption(const uint8_t* a1, const uint8_t* a2, RED4ext::CString* a3) {
    RED4ext::RelocFunc<decltype(&RED4ext::GameOptionManager::SetGameOption)> call(GameOptionManager_SetGameOption_Addr);
    return call(this, a1, a2, a3);
}

RED4EXT_INLINE int64_t RED4ext::IGameInstance::RegisterGameLoadCallbacks(int64_t a1, uint8_t* a2, int64_t a3) {
    RED4ext::RelocFunc<decltype(&RED4ext::IGameInstance::RegisterGameLoadCallbacks)> call(IGameInstance_RegisterGameLoadCallbacks_Addr);
    return call(this, a1, a2, a3);
}

RED4EXT_INLINE void RED4ext::IGameInstance::RegisterStreamingWorldLoadedCallback(int64_t a1, int64_t a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::IGameInstance::RegisterStreamingWorldLoadedCallback)> call(IGameInstance_RegisterStreamingWorldLoadedCallback_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE bool RED4ext::IGameInstance::Systems158() {
    RED4ext::RelocFunc<decltype(&RED4ext::IGameInstance::Systems158)> call(IGameInstance_Systems158_Addr);
    return call(this);
}

RED4EXT_INLINE void RED4ext::IGameInstance::Systems160() {
    RED4ext::RelocFunc<decltype(&RED4ext::IGameInstance::Systems160)> call(IGameInstance_Systems160_Addr);
    return call(this);
}

RED4EXT_INLINE void RED4ext::IGameInstance::Systems168o170(bool a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::IGameInstance::Systems168o170)> call(IGameInstance_Systems168o170_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::IGameInstance::Systems178(RED4ext::DynArray<void *>* a1, bool a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::IGameInstance::Systems178)> call(IGameInstance_Systems178_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE void RED4ext::IGameInstance::WorldDetached(void* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::IGameInstance::WorldDetached)> call(IGameInstance_WorldDetached_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::IGameInstance::WorldPendingDetach(void* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::IGameInstance::WorldPendingDetach)> call(IGameInstance_WorldPendingDetach_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::ISerializable::SetOwner(RED4ext::ISerializable* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::ISerializable::SetOwner)> call(ISerializable_SetOwner_Addr);
    return call(this, a1);
}

RED4EXT_INLINE float RED4ext::Quaternion::GetYaw() {
    RED4ext::RelocFunc<decltype(&RED4ext::Quaternion::GetYaw)> call(Quaternion_GetYaw_Addr);
    return call(this);
}

RED4EXT_INLINE RED4ext::EulerAngles* RED4ext::Quaternion::ToEulerAngles(RED4ext::EulerAngles* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::Quaternion::ToEulerAngles)> call(Quaternion_ToEulerAngles_Addr);
    return call(this, a1);
}

RED4EXT_INLINE RED4ext::Matrix* RED4ext::Quaternion::ToMatrix(RED4ext::Matrix* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::Quaternion::ToMatrix)> call(Quaternion_ToMatrix_Addr);
    return call(this, a1);
}

RED4EXT_INLINE int64_t RED4ext::UpdatableSystems::SetRuntimeScene(RED4ext::world::RuntimeScene* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::UpdatableSystems::SetRuntimeScene)> call(UpdatableSystems_SetRuntimeScene_Addr);
    return call(this, a1);
}

RED4EXT_INLINE int64_t RED4ext::UpdateManager::IterateUnknown(RED4ext::CClass*** a1, RED4ext::CClass*** a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::UpdateManager::IterateUnknown)> call(UpdateManager_IterateUnknown_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE void* RED4ext::UpdateManager::PrepareFiring(int64_t a1, int32_t* a2, uint32_t a3, uint32_t a4) {
    RED4ext::RelocFunc<decltype(&RED4ext::UpdateManager::PrepareFiring)> call(UpdateManager_PrepareFiring_Addr);
    return call(this, a1, a2, a3, a4);
}

RED4EXT_INLINE uint64_t RED4ext::UpdateManager::RegisterUpdate(RED4ext::UpdateManager::UpdateStorage* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::UpdateManager::RegisterUpdate)> call(UpdateManager_RegisterUpdate_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::UpdateManager::ReleaseUnknown() {
    RED4ext::RelocFunc<decltype(&RED4ext::UpdateManager::ReleaseUnknown)> call(UpdateManager_ReleaseUnknown_Addr);
    return call(this);
}

RED4EXT_INLINE RED4ext::UpdateManager::UpdateStorage* RED4ext::UpdateManager::UpdateStorage::Copy(RED4ext::UpdateManager::UpdateStorage* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::UpdateManager::UpdateStorage::Copy)> call(UpdateManager_UpdateStorage_Copy_Addr);
    return call(this, a1);
}

RED4EXT_INLINE RED4ext::UpdateManager::UpdateStorage* RED4ext::UpdateManager::UpdateStorage::Copy_0(RED4ext::UpdateManager::UpdateStorage* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::UpdateManager::UpdateStorage::Copy_0)> call(UpdateManager_UpdateStorage_Copy_0_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::UpdateManagerHolder::RegisterBucketUpdate(RED4ext::Unk2 a1, RED4ext::Unk1 a2, RED4ext::IUpdatableSystem* a3, const char* a4,
                                                                       const RED4ext::Callback<void (*)(RED4ext::Unk2* unk2, float deltaTime, void* unkStruct)> &a5) {
    RED4ext::RelocFunc<decltype(&RED4ext::UpdateManagerHolder::RegisterBucketUpdate)> call(UpdateManagerHolder_RegisterBucketUpdate_Addr);
    return call(this, a1, a2, a3, a4, a5);
}

RED4EXT_INLINE int64_t RED4ext::UpdateManagerHolder::Something() {
    RED4ext::RelocFunc<decltype(&RED4ext::UpdateManagerHolder::Something)> call(UpdateManagerHolder_Something_Addr);
    return call(this);
}

RED4EXT_INLINE void* RED4ext::UpdateManagerHolder::UpdateSystems(void* a1, float a2, int64_t a3) {
    RED4ext::RelocFunc<decltype(&RED4ext::UpdateManagerHolder::UpdateSystems)> call(UpdateManagerHolder_UpdateSystems_Addr);
    return call(this, a1, a2, a3);
}

RED4EXT_INLINE void RED4ext::action::ActionBase::Lock() {
    RED4ext::RelocFunc<decltype(&RED4ext::action::ActionBase::Lock)> call(action_ActionBase_Lock_Addr);
    return call(this);
}

RED4EXT_INLINE void RED4ext::action::ActionBase::StartWithReplicatedState() {
    RED4ext::RelocFunc<decltype(&RED4ext::action::ActionBase::StartWithReplicatedState)> call(action_ActionBase_StartWithReplicatedState_Addr);
    return call(this);
}

RED4EXT_INLINE int64_t RED4ext::action::ActionInterface::EndActions() {
    RED4ext::RelocFunc<decltype(&RED4ext::action::ActionInterface::EndActions)> call(action_ActionInterface_EndActions_Addr);
    return call(this);
}

RED4EXT_INLINE bool RED4ext::action::ActionInterface::IsAnimationiActive(RED4ext::action::Type a1, uint8_t a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::action::ActionInterface::IsAnimationiActive)> call(action_ActionInterface_IsAnimationiActive_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE void RED4ext::action::ActionInterface::ProcessActions(void* a1, bool a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::action::ActionInterface::ProcessActions)> call(action_ActionInterface_ProcessActions_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE int64_t RED4ext::audio::BankManager::LoadBank(int64_t a1, uint64_t a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::audio::BankManager::LoadBank)> call(audio_BankManager_LoadBank_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE bool RED4ext::audio::BankManager::LoadBanksMaybe(int64_t a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::audio::BankManager::LoadBanksMaybe)> call(audio_BankManager_LoadBanksMaybe_Addr);
    return call(this, a1);
}

RED4EXT_INLINE int64_t RED4ext::audio::BankManager::UnloadBank(int64_t a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::audio::BankManager::UnloadBank)> call(audio_BankManager_UnloadBank_Addr);
    return call(this, a1);
}

RED4EXT_INLINE RED4ext::audio::Emitter* RED4ext::audio::Emitters::GetEmitterForEntityID(RED4ext::ent::EntityID a1, RED4ext::CName a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::audio::Emitters::GetEmitterForEntityID)> call(audio_Emitters_GetEmitterForEntityID_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE RED4ext::audio::Emitter* RED4ext::audio::Emitters::GetOrCreateEmitter(RED4ext::ent::EntityID a1, RED4ext::CName a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::audio::Emitters::GetOrCreateEmitter)> call(audio_Emitters_GetOrCreateEmitter_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE float RED4ext::audio::GameParameterStorage::GetValue(RED4ext::CName a1, float a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::audio::GameParameterStorage::GetValue)> call(audio_GameParameterStorage_GetValue_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE float* RED4ext::audio::GameParameterStorage::SetValue(RED4ext::CName a1, float a2, float a3) {
    RED4ext::RelocFunc<decltype(&RED4ext::audio::GameParameterStorage::SetValue)> call(audio_GameParameterStorage_SetValue_Addr);
    return call(this, a1, a2, a3);
}

//RED4EXT_INLINE RED4ext::audio::MetadataManager::~MetadataManager() {
//    RED4ext::RelocFunc<decltype(&RED4ext::audio::MetadataManager::~MetadataManager)> call(audio_MetadataManager__MetadataManager_Addr);
//    return call(this);
//}

RED4EXT_INLINE RED4ext::audio::EmitterPosition* RED4ext::audio::Thing::UpdateEmitterPosition(RED4ext::ent::EntityID a1, RED4ext::CName a2, RED4ext::Vector4* a3) {
    RED4ext::RelocFunc<decltype(&RED4ext::audio::Thing::UpdateEmitterPosition)> call(audio_Thing_UpdateEmitterPosition_Addr);
    return call(this, a1, a2, a3);
}

RED4EXT_INLINE bool RED4ext::ent::AnimatedComponent::GetReferencePoseMSForName(RED4ext::CName a1, RED4ext::Transform* a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::ent::AnimatedComponent::GetReferencePoseMSForName)> call(ent_AnimatedComponent_GetReferencePoseMSForName_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE RED4ext::RefCnt* RED4ext::ent::ComponentsStorage::AddComponent(RED4ext::Handle<RED4ext::ent::IComponent> a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::ent::ComponentsStorage::AddComponent)> call(ent_ComponentsStorage_AddComponent_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::ent::ComponentsStorage::AddComponents(RED4ext::DynArray<RED4ext::Handle<RED4ext::ent::IComponent>>* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::ent::ComponentsStorage::AddComponents)> call(ent_ComponentsStorage_AddComponents_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::ent::ComponentsStorage::FreeMemory() {
    RED4ext::RelocFunc<decltype(&RED4ext::ent::ComponentsStorage::FreeMemory)> call(ent_ComponentsStorage_FreeMemory_Addr);
    return call(this);
}

RED4EXT_INLINE RED4ext::Handle<RED4ext::ent::IComponent>* RED4ext::ent::ComponentsStorage::GetComponentByCRUID(RED4ext::Handle<RED4ext::ent::IComponent>* a1, RED4ext::CRUID a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::ent::ComponentsStorage::GetComponentByCRUID)> call(ent_ComponentsStorage_GetComponentByCRUID_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE int64_t RED4ext::ent::ComponentsStorage::GetSize() {
    RED4ext::RelocFunc<decltype(&RED4ext::ent::ComponentsStorage::GetSize)> call(ent_ComponentsStorage_GetSize_Addr);
    return call(this);
}

RED4EXT_INLINE bool RED4ext::ent::ComponentsStorage::IsEmpty() {
    RED4ext::RelocFunc<decltype(&RED4ext::ent::ComponentsStorage::IsEmpty)> call(ent_ComponentsStorage_IsEmpty_Addr);
    return call(this);
}

RED4EXT_INLINE void RED4ext::ent::Entity::ReassembleAppearance(int64_t a1, uint64_t a2, uint64_t a3, RED4ext::DynArray<RED4ext::Handle<RED4ext::ent::IComponent>>* a4, RED4ext::Handle<RED4ext::ent::IComponent>* a5) {
    RED4ext::RelocFunc<decltype(&RED4ext::ent::Entity::ReassembleAppearance)> call(ent_Entity_ReassembleAppearance_Addr);
    return call(this, a1, a2, a3, a4, a5);
}

RED4EXT_INLINE uint64_t RED4ext::ent::Entity::SetupEntityAndComponents(RED4ext::ent::EntityDefinition* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::ent::Entity::SetupEntityAndComponents)> call(ent_Entity_SetupEntityAndComponents_Addr);
    return call(this, a1);
}

RED4EXT_INLINE int64_t RED4ext::ent::Entity::SomethingListeners(RED4ext::Handle<RED4ext::IScriptable>* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::ent::Entity::SomethingListeners)> call(ent_Entity_SomethingListeners_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::ent::IComponent::SetEntity(RED4ext::ent::Entity* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::ent::IComponent::SetEntity)> call(ent_IComponent_SetEntity_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::ent::MeshComponent::Load(bool a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::ent::MeshComponent::Load)> call(ent_MeshComponent_Load_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::ent::PhysicalMeshComponent::ProcessSystemResource(RED4ext::Handle<RED4ext::CMesh>* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::ent::PhysicalMeshComponent::ProcessSystemResource)> call(ent_PhysicalMeshComponent_ProcessSystemResource_Addr);
    return call(this, a1);
}

RED4EXT_INLINE bool RED4ext::ent::SlotComponent::GetLocalSlotTransformFromIndex(int32_t a1, RED4ext::Transform* a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::ent::SlotComponent::GetLocalSlotTransformFromIndex)> call(ent_SlotComponent_GetLocalSlotTransformFromIndex_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE bool RED4ext::ent::SlotComponent::GetSlotGlobalTransform(RED4ext::CName a1, RED4ext::WorldTransform* a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::ent::SlotComponent::GetSlotGlobalTransform)> call(ent_SlotComponent_GetSlotGlobalTransform_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE int64_t RED4ext::ent::SlotComponent::GetSlotIndex(RED4ext::CName a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::ent::SlotComponent::GetSlotIndex)> call(ent_SlotComponent_GetSlotIndex_Addr);
    return call(this, a1);
}

RED4EXT_INLINE bool RED4ext::ent::SlotComponent::GetSlotLocalTransform(int32_t a1, RED4ext::WorldTransform* a2, RED4ext::WorldTransform* a3) {
    RED4ext::RelocFunc<decltype(&RED4ext::ent::SlotComponent::GetSlotLocalTransform)> call(ent_SlotComponent_GetSlotLocalTransform_Addr);
    return call(this, a1, a2, a3);
}

RED4EXT_INLINE void RED4ext::ent::VisualControllerComponent::LoadUnkD8(uint8_t a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::ent::VisualControllerComponent::LoadUnkD8)> call(ent_VisualControllerComponent_LoadUnkD8_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::ent::VisualControllerComponent::Set0xF4(uint8_t a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::ent::VisualControllerComponent::Set0xF4)> call(ent_VisualControllerComponent_Set0xF4_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::ent::VisualControllerComponent::Unknown(int64_t a1, uint8_t a2, uint8_t a3) {
    RED4ext::RelocFunc<decltype(&RED4ext::ent::VisualControllerComponent::Unknown)> call(ent_VisualControllerComponent_Unknown_Addr);
    return call(this, a1, a2, a3);
}

RED4EXT_INLINE void RED4ext::game::CActionsFactory::AddActionTypeManual(RED4ext::action::Type a1, RED4ext::action::ActionBase*(* a2)(int64_t, uint32_t*, uint32_t)) {
    RED4ext::RelocFunc<decltype(&RED4ext::game::CActionsFactory::AddActionTypeManual)> call(game_CActionsFactory_AddActionTypeManual_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE void RED4ext::game::GameAudioSystem::SetGlobalParameter(RED4ext::CName a1, float a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::game::GameAudioSystem::SetGlobalParameter)> call(game_GameAudioSystem_SetGlobalParameter_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE void RED4ext::game::GameAudioSystem::UpdateParameter(int32_t* a1, RED4ext::CName a2, float a3) {
    RED4ext::RelocFunc<decltype(&RED4ext::game::GameAudioSystem::UpdateParameter)> call(game_GameAudioSystem_UpdateParameter_Addr);
    return call(a1, a2, a3);
}

RED4EXT_INLINE void** RED4ext::game::IGameSystem::SetGameInstance(void** a1, RED4ext::GameInstance* a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::game::IGameSystem::SetGameInstance)> call(game_IGameSystem_SetGameInstance_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE int64_t RED4ext::game::IGameSystem::Unset() {
    RED4ext::RelocFunc<decltype(&RED4ext::game::IGameSystem::Unset)> call(game_IGameSystem_Unset_Addr);
    return call(this);
}

RED4EXT_INLINE bool RED4ext::game::Object::CallScriptFunction(void* a1, uint64_t a2, uint8_t a3) {
    RED4ext::RelocFunc<decltype(&RED4ext::game::Object::CallScriptFunction)> call(game_Object_CallScriptFunction_Addr);
    return call(this, a1, a2, a3);
}

RED4EXT_INLINE void RED4ext::game::VehicleSystem::BeginUpdate(RED4ext::game::VehicleSystem** a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::game::VehicleSystem::BeginUpdate)> call(game_VehicleSystem_BeginUpdate_Addr);
    return call(a1);
}

RED4EXT_INLINE void RED4ext::game::VehicleSystem::UpdateVehicleArrays() {
    RED4ext::RelocFunc<decltype(&RED4ext::game::VehicleSystem::UpdateVehicleArrays)> call(game_VehicleSystem_UpdateVehicleArrays_Addr);
    return call(this);
}

RED4EXT_INLINE RED4ext::Handle<RED4ext::physics::ColliderSphere>* RED4ext::physics::ColliderSphere::createHandleWithRadius(RED4ext::Handle<RED4ext::physics::ICollider>* a1, float a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::ColliderSphere::createHandleWithRadius)> call(physics_ColliderSphere_createHandleWithRadius_Addr);
    return call(a1, a2);
}

RED4EXT_INLINE void RED4ext::physics::FilterData::LoadPreset(RED4ext::CName a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::FilterData::LoadPreset)> call(physics_FilterData_LoadPreset_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::physics::GeometryCache::FreeAlwaysLoaded() {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::GeometryCache::FreeAlwaysLoaded)> call(physics_GeometryCache_FreeAlwaysLoaded_Addr);
    return call(this);
}

RED4EXT_INLINE void RED4ext::physics::GeometryCache::FreeGeometryKey(RED4ext::physics::GeometryKey* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::GeometryCache::FreeGeometryKey)> call(physics_GeometryCache_FreeGeometryKey_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::physics::GeometryCache::FreeSector(uint32_t a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::GeometryCache::FreeSector)> call(physics_GeometryCache_FreeSector_Addr);
    return call(this, a1);
}

RED4EXT_INLINE bool RED4ext::physics::GeometryCache::HasGeometryKey(RED4ext::physics::GeometryKey* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::GeometryCache::HasGeometryKey)> call(physics_GeometryCache_HasGeometryKey_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::physics::GeometryCache::LoadAlwaysloadedSectorGeometries(void* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::GeometryCache::LoadAlwaysloadedSectorGeometries)> call(physics_GeometryCache_LoadAlwaysloadedSectorGeometries_Addr);
    return call(a1);
}

RED4EXT_INLINE int64_t RED4ext::physics::GeometryCache::LoadAlwaysloadedSectorGeometriesSetup(int64_t a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::GeometryCache::LoadAlwaysloadedSectorGeometriesSetup)> call(physics_GeometryCache_LoadAlwaysloadedSectorGeometriesSetup_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::physics::GeometryCache::LoadSectorGeometries(RED4ext::physics::GeometryCache::LoadSectorGeometriesStruct* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::GeometryCache::LoadSectorGeometries)> call(physics_GeometryCache_LoadSectorGeometries_Addr);
    return call(a1);
}

RED4EXT_INLINE int64_t RED4ext::physics::GeometryCache::LoadSectorGeometriesSetup(uint32_t a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::GeometryCache::LoadSectorGeometriesSetup)> call(physics_GeometryCache_LoadSectorGeometriesSetup_Addr);
    return call(this, a1);
}

RED4EXT_INLINE bool RED4ext::physics::GeometryCache::Unknown(uint32_t a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::GeometryCache::Unknown)> call(physics_GeometryCache_Unknown_Addr);
    return call(this, a1);
}

RED4EXT_INLINE int64_t RED4ext::physics::GeometryCache::sub_7FF75B921520(int64_t a1, int64_t* a2, RED4ext::DynArray<void *>** a3, uint8_t a4) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::GeometryCache::sub_7FF75B921520)> call(physics_GeometryCache_sub_7FF75B921520_Addr);
    return call(this, a1, a2, a3, a4);
}

RED4EXT_INLINE bool RED4ext::physics::GeometryCache::sub_7FF75B922410(RED4ext::physics::GeometryKey* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::GeometryCache::sub_7FF75B922410)> call(physics_GeometryCache_sub_7FF75B922410_Addr);
    return call(this, a1);
}

RED4EXT_INLINE RED4ext::Transform* RED4ext::physics::GetShapeLocalPos(RED4ext::Transform* a0, RED4ext::physics::ProxyID* a1, uint32_t a2, uint32_t a3) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::GetShapeLocalPos)> call(physics_GetShapeLocalPos_Addr);
    return call(a0, a1, a2, a3);
}

RED4EXT_INLINE void RED4ext::physics::ProxyCache::AddToCache(RED4ext::physics::ProxyCacheEntry* a1, int32_t a2, int32_t a3, RED4ext::physics::StateValue a4, void* a5, uint64_t a6, bool a7) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::ProxyCache::AddToCache)> call(physics_ProxyCache_AddToCache_Addr);
    return call(this, a1, a2, a3, a4, a5, a6, a7);
}

RED4EXT_INLINE void* RED4ext::physics::ProxyCache::GetDataFromCache(uint32_t a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::ProxyCache::GetDataFromCache)> call(physics_ProxyCache_GetDataFromCache_Addr);
    return call(this, a1);
}

RED4EXT_INLINE bool RED4ext::physics::ProxyCache::GetFromCacheOrGet(RED4ext::physics::ProxyID* a1, uint32_t a2, uint32_t a3, RED4ext::physics::StateValue a4, void* a5, uint32_t a6) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::ProxyCache::GetFromCacheOrGet)> call(physics_ProxyCache_GetFromCacheOrGet_Addr);
    return call(this, a1, a2, a3, a4, a5, a6);
}

RED4EXT_INLINE int64_t RED4ext::physics::ProxyCacheManager::Unk948::Kick(float a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::ProxyCacheManager::Unk948::Kick)> call(physics_ProxyCacheManager_Unk948_Kick_Addr);
    return call(this, a1);
}

RED4EXT_INLINE RED4ext::physics::ProxyHelper* RED4ext::physics::ProxyHelper::Create(RED4ext::physics::ProxyID* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::ProxyHelper::Create)> call(physics_ProxyHelper_Create_Addr);
    return call(this, a1);
}

RED4EXT_INLINE RED4ext::physics::ProxyHelper* RED4ext::physics::ProxyHelper::GetThingWithLock(RED4ext::physics::ProxyID* a1, RED4ext::SharedMutex* a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::ProxyHelper::GetThingWithLock)> call(physics_ProxyHelper_GetThingWithLock_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE RED4ext::physics::ProxyHelper* RED4ext::physics::ProxyHelper::SetAngularDamping(float* a1, uint32_t a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::ProxyHelper::SetAngularDamping)> call(physics_ProxyHelper_SetAngularDamping_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE RED4ext::physics::ProxyHelper* RED4ext::physics::ProxyHelper::SetCCD(bool a1, int32_t a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::ProxyHelper::SetCCD)> call(physics_ProxyHelper_SetCCD_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE RED4ext::physics::ProxyHelper* RED4ext::physics::ProxyHelper::SetGravity(bool a1, uint32_t a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::ProxyHelper::SetGravity)> call(physics_ProxyHelper_SetGravity_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE RED4ext::physics::ProxyHelper* RED4ext::physics::ProxyHelper::SetIsQueryable(bool a1, uint32_t a2, uint32_t a3) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::ProxyHelper::SetIsQueryable)> call(physics_ProxyHelper_SetIsQueryable_Addr);
    return call(this, a1, a2, a3);
}

RED4EXT_INLINE RED4ext::physics::ProxyHelper* RED4ext::physics::ProxyHelper::SetLinearDamping(float* a1, uint32_t a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::ProxyHelper::SetLinearDamping)> call(physics_ProxyHelper_SetLinearDamping_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE RED4ext::physics::ProxyHelper* RED4ext::physics::ProxyHelper::SetMassAndUpdateInertia(float a1, uint32_t a2, bool a3) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::ProxyHelper::SetMassAndUpdateInertia)> call(physics_ProxyHelper_SetMassAndUpdateInertia_Addr);
    return call(this, a1, a2, a3);
}

RED4EXT_INLINE RED4ext::physics::ProxyHelper* RED4ext::physics::ProxyHelper::SetQueryFilterData(void* a1, uint32_t a2, uint32_t a3) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::ProxyHelper::SetQueryFilterData)> call(physics_ProxyHelper_SetQueryFilterData_Addr);
    return call(this, a1, a2, a3);
}

RED4EXT_INLINE RED4ext::physics::ProxyHelper* RED4ext::physics::ProxyHelper::SetSimulationFilterData(void* a1, int32_t a2, int32_t a3) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::ProxyHelper::SetSimulationFilterData)> call(physics_ProxyHelper_SetSimulationFilterData_Addr);
    return call(this, a1, a2, a3);
}

RED4EXT_INLINE RED4ext::physics::ProxyHelper* RED4ext::physics::ProxyHelper::SetSimulationShape(bool a1, uint32_t a2, uint32_t a3) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::ProxyHelper::SetSimulationShape)> call(physics_ProxyHelper_SetSimulationShape_Addr);
    return call(this, a1, a2, a3);
}

RED4EXT_INLINE int64_t RED4ext::physics::ProxyHelper::Unlock() {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::ProxyHelper::Unlock)> call(physics_ProxyHelper_Unlock_Addr);
    return call(this);
}

RED4EXT_INLINE bool RED4ext::physics::ProxyHelper::UpdateProxyCache() {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::ProxyHelper::UpdateProxyCache)> call(physics_ProxyHelper_UpdateProxyCache_Addr);
    return call(this);
}

RED4EXT_INLINE RED4ext::physics::BaseProxy* RED4ext::physics::ProxyID::GetProxy() {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::ProxyID::GetProxy)> call(physics_ProxyID_GetProxy_Addr);
    return call(this);
}

RED4EXT_INLINE uint32_t* RED4ext::physics::ProxyID::ProcessProxyDesc(RED4ext::physics::BaseProxyDesc* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::ProxyID::ProcessProxyDesc)> call(physics_ProxyID_ProcessProxyDesc_Addr);
    return call(this, a1);
}

RED4EXT_INLINE bool RED4ext::physics::ProxyID::Unk(void* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::ProxyID::Unk)> call(physics_ProxyID_Unk_Addr);
    return call(this, a1);
}

RED4EXT_INLINE RED4ext::physics::ProxyCache* RED4ext::physics::ProxyManager::GetProxyCache(RED4ext::physics::ProxyID* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::ProxyManager::GetProxyCache)> call(physics_ProxyManager_GetProxyCache_Addr);
    return call(this, a1);
}

RED4EXT_INLINE RED4ext::Handle<RED4ext::physics::BaseProxy>* RED4ext::physics::ProxyManager::GetProxyHandle(RED4ext::Handle<RED4ext::physics::BaseProxy>* a1, RED4ext::physics::ProxyID* a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::ProxyManager::GetProxyHandle)> call(physics_ProxyManager_GetProxyHandle_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE bool RED4ext::physics::ProxyManager::HasProxy(RED4ext::physics::ProxyID* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::ProxyManager::HasProxy)> call(physics_ProxyManager_HasProxy_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::physics::ProxyManager::SetProxyCacheID(RED4ext::physics::ProxyID* a1, RED4ext::physics::ProxyCacheID* a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::ProxyManager::SetProxyCacheID)> call(physics_ProxyManager_SetProxyCacheID_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE bool RED4ext::physics::ProxyManager::TestUnk2E2068(RED4ext::physics::ProxyID* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::ProxyManager::TestUnk2E2068)> call(physics_ProxyManager_TestUnk2E2068_Addr);
    return call(this, a1);
}

RED4EXT_INLINE RED4ext::Handle<RED4ext::physics::SystemResource>* RED4ext::physics::SystemResource::GetFromCMesh(RED4ext::Handle<RED4ext::physics::SystemResource>* a1, RED4ext::CMesh* a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::SystemResource::GetFromCMesh)> call(physics_SystemResource_GetFromCMesh_Addr);
    return call(a1, a2);
}

RED4EXT_INLINE float RED4ext::physics::VehiclePhysicsInsert1::SinMath(float a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::VehiclePhysicsInsert1::SinMath)> call(physics_VehiclePhysicsInsert1_SinMath_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::physics::VehiclePhysicsInsert2::SetsUnk160Unk15C(float a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::VehiclePhysicsInsert2::SetsUnk160Unk15C)> call(physics_VehiclePhysicsInsert2_SetsUnk160Unk15C_Addr);
    return call(this, a1);
}

RED4EXT_INLINE bool RED4ext::physics::pxRigidBody_Get(void* a0, int64_t a1, RED4ext::physics::StateValue a2, void* a3, uint32_t a4) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::pxRigidBody_Get)> call(physics_pxRigidBody_Get_Addr);
    return call(a0, a1, a2, a3, a4);
}

RED4EXT_INLINE bool RED4ext::physics::pxRigidBody_Update(void* a0, RED4ext::physics::StateValue a1, void* a2, int64_t a3, uint32_t a4, bool a5) {
    RED4ext::RelocFunc<decltype(&RED4ext::physics::pxRigidBody_Update)> call(physics_pxRigidBody_Update_Addr);
    return call(a0, a1, a2, a3, a4, a5);
}

RED4EXT_INLINE void RED4ext::vehicle::AirControl::ApplyTorque(uint32_t a1, float a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::AirControl::ApplyTorque)> call(vehicle_AirControl_ApplyTorque_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE RED4ext::Vector3* RED4ext::vehicle::AirControl::GetAngularVelocity(RED4ext::Vector3* a1, int32_t a2, void* a3) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::AirControl::GetAngularVelocity)> call(vehicle_AirControl_GetAngularVelocity_Addr);
    return call(this, a1, a2, a3);
}

RED4EXT_INLINE void RED4ext::vehicle::AirControl::Process(float a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::AirControl::Process)> call(vehicle_AirControl_Process_Addr);
    return call(this, a1);
}

RED4EXT_INLINE bool RED4ext::vehicle::BaseObject::CheckPhysicsStateActionInterface() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::BaseObject::CheckPhysicsStateActionInterface)> call(vehicle_BaseObject_CheckPhysicsStateActionInterface_Addr);
    return call(this);
}

RED4EXT_INLINE RED4ext::action::ActionBase** RED4ext::vehicle::BaseObject::CreateAction(RED4ext::action::ActionBase** a1, RED4ext::action::Type a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::BaseObject::CreateAction)> call(vehicle_BaseObject_CreateAction_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE RED4ext::Handle<void>* RED4ext::vehicle::BaseObject::GetCurveSetData(RED4ext::Handle<void>* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::BaseObject::GetCurveSetData)> call(vehicle_BaseObject_GetCurveSetData_Addr);
    return call(this, a1);
}

RED4EXT_INLINE double RED4ext::vehicle::BaseObject::GetDeceleration() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::BaseObject::GetDeceleration)> call(vehicle_BaseObject_GetDeceleration_Addr);
    return call(this);
}

RED4EXT_INLINE RED4ext::CString* RED4ext::vehicle::BaseObject::GetDisplayName(RED4ext::CString* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::BaseObject::GetDisplayName)> call(vehicle_BaseObject_GetDisplayName_Addr);
    return call(this, a1);
}

RED4EXT_INLINE float RED4ext::vehicle::BaseObject::GetGravitationalForce() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::BaseObject::GetGravitationalForce)> call(vehicle_BaseObject_GetGravitationalForce_Addr);
    return call(this);
}

RED4EXT_INLINE float RED4ext::vehicle::BaseObject::GetInverseMass() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::BaseObject::GetInverseMass)> call(vehicle_BaseObject_GetInverseMass_Addr);
    return call(this);
}

RED4EXT_INLINE RED4ext::vehicle::PhysicsData* RED4ext::vehicle::BaseObject::GetPhysicsData() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::BaseObject::GetPhysicsData)> call(vehicle_BaseObject_GetPhysicsData_Addr);
    return call(this);
}

RED4EXT_INLINE float RED4ext::vehicle::BaseObject::GetTotalMass() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::BaseObject::GetTotalMass)> call(vehicle_BaseObject_GetTotalMass_Addr);
    return call(this);
}

RED4EXT_INLINE float RED4ext::vehicle::BaseObject::GetUnk60C() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::BaseObject::GetUnk60C)> call(vehicle_BaseObject_GetUnk60C_Addr);
    return call(this);
}

RED4EXT_INLINE void* RED4ext::vehicle::BaseObject::GetUnk8E0() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::BaseObject::GetUnk8E0)> call(vehicle_BaseObject_GetUnk8E0_Addr);
    return call(this);
}

RED4EXT_INLINE RED4ext::world::RuntimeSystemPhysics* RED4ext::vehicle::BaseObject::GetVehicleSystem() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::BaseObject::GetVehicleSystem)> call(vehicle_BaseObject_GetVehicleSystem_Addr);
    return call(this);
}

RED4EXT_INLINE RED4ext::Quaternion* RED4ext::vehicle::BaseObject::GetWeaponOrientation(RED4ext::Quaternion* a1, uint32_t a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::BaseObject::GetWeaponOrientation)> call(vehicle_BaseObject_GetWeaponOrientation_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE void RED4ext::vehicle::BaseObject::HornForDuration() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::BaseObject::HornForDuration)> call(vehicle_BaseObject_HornForDuration_Addr);
    return call(this);
}

RED4EXT_INLINE void RED4ext::vehicle::BaseObject::HornForDurationDelayed(float a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::BaseObject::HornForDurationDelayed)> call(vehicle_BaseObject_HornForDurationDelayed_Addr);
    return call(this, a1);
}

RED4EXT_INLINE RED4ext::WorldTransform* RED4ext::vehicle::BaseObject::PostMovePhysicsStateNotZero(float a1, float* a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::BaseObject::PostMovePhysicsStateNotZero)> call(vehicle_BaseObject_PostMovePhysicsStateNotZero_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE RED4ext::WorldTransform* RED4ext::vehicle::BaseObject::PostMovePhysicsStateZero(float a1, float* a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::BaseObject::PostMovePhysicsStateZero)> call(vehicle_BaseObject_PostMovePhysicsStateZero_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE void RED4ext::vehicle::BaseObject::PreUpdatePreMovePhysicsStateNotZero(int64_t a1, float* a2, int64_t a3) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::BaseObject::PreUpdatePreMovePhysicsStateNotZero)> call(vehicle_BaseObject_PreUpdatePreMovePhysicsStateNotZero_Addr);
    return call(this, a1, a2, a3);
}

RED4EXT_INLINE int64_t RED4ext::vehicle::BaseObject::PreUpdatePreMovePhysicsStateZero(int64_t a1, int64_t a2, int64_t a3) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::BaseObject::PreUpdatePreMovePhysicsStateZero)> call(vehicle_BaseObject_PreUpdatePreMovePhysicsStateZero_Addr);
    return call(this, a1, a2, a3);
}

RED4EXT_INLINE void RED4ext::vehicle::BaseObject::Reset8B4() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::BaseObject::Reset8B4)> call(vehicle_BaseObject_Reset8B4_Addr);
    return call(this);
}

RED4EXT_INLINE void RED4ext::vehicle::BaseObject::SetPhysicsState(RED4ext::vehicle::PhysicsState a1, bool a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::BaseObject::SetPhysicsState)> call(vehicle_BaseObject_SetPhysicsState_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE void RED4ext::vehicle::BaseObject::UnsetPhysicsStates() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::BaseObject::UnsetPhysicsStates)> call(vehicle_BaseObject_UnsetPhysicsStates_Addr);
    return call(this);
}

RED4EXT_INLINE void RED4ext::vehicle::BaseObject::UpdatePhysicsSleepState(float a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::BaseObject::UpdatePhysicsSleepState)> call(vehicle_BaseObject_UpdatePhysicsSleepState_Addr);
    return call(this, a1);
}

RED4EXT_INLINE int64_t RED4ext::vehicle::BikePhysics::AnimationUpdate() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::BikePhysics::AnimationUpdate)> call(vehicle_BikePhysics_AnimationUpdate_Addr);
    return call(this);
}

RED4EXT_INLINE void RED4ext::vehicle::CameraManager::ChangeCamera(uint32_t a1, float a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::CameraManager::ChangeCamera)> call(vehicle_CameraManager_ChangeCamera_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE bool RED4ext::vehicle::CameraManager::IsTPP() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::CameraManager::IsTPP)> call(vehicle_CameraManager_IsTPP_Addr);
    return call(this);
}

RED4EXT_INLINE int64_t RED4ext::vehicle::CarPhysics::AnimationUpdate(float a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::CarPhysics::AnimationUpdate)> call(vehicle_CarPhysics_AnimationUpdate_Addr);
    return call(this, a1);
}

RED4EXT_INLINE bool RED4ext::vehicle::ChassisComponent::BigUpdate() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::ChassisComponent::BigUpdate)> call(vehicle_ChassisComponent_BigUpdate_Addr);
    return call(this);
}

RED4EXT_INLINE RED4ext::Handle<RED4ext::physics::ICollider>** RED4ext::vehicle::ChassisComponent::GetCollisionShapes(RED4ext::Handle<RED4ext::physics::ICollider>** a1, bool a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::ChassisComponent::GetCollisionShapes)> call(vehicle_ChassisComponent_GetCollisionShapes_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE RED4ext::physics::ProxyHelper* RED4ext::vehicle::ChassisComponent::GetProxyHelperAndLock(RED4ext::physics::ProxyHelper* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::ChassisComponent::GetProxyHelperAndLock)> call(vehicle_ChassisComponent_GetProxyHelperAndLock_Addr);
    return call(this, a1);
}

RED4EXT_INLINE int64_t RED4ext::vehicle::ChassisComponent::SetFilterData(RED4ext::physics::FilterData* a1, RED4ext::physics::FilterData* a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::ChassisComponent::SetFilterData)> call(vehicle_ChassisComponent_SetFilterData_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE void RED4ext::vehicle::ChassisComponent::SomethingIfEnabled() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::ChassisComponent::SomethingIfEnabled)> call(vehicle_ChassisComponent_SomethingIfEnabled_Addr);
    return call(this);
}

RED4EXT_INLINE RED4ext::WorldTransform* RED4ext::vehicle::ChassisComponent::TransformWorldTransform(RED4ext::WorldTransform* a1, RED4ext::WorldTransform* a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::ChassisComponent::TransformWorldTransform)> call(vehicle_ChassisComponent_TransformWorldTransform_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE void RED4ext::vehicle::ChassisComponent::Update() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::ChassisComponent::Update)> call(vehicle_ChassisComponent_Update_Addr);
    return call(this);
}

RED4EXT_INLINE void RED4ext::vehicle::ChassisComponent::UpdatePhysicsState(uint32_t a1, bool a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::ChassisComponent::UpdatePhysicsState)> call(vehicle_ChassisComponent_UpdatePhysicsState_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE float RED4ext::vehicle::PID::GetCorrection() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::PID::GetCorrection)> call(vehicle_PID_GetCorrection_Addr);
    return call(this);
}

RED4EXT_INLINE void RED4ext::vehicle::PID::Initialize(float a1, float a2, float a3) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::PID::Initialize)> call(vehicle_PID_Initialize_Addr);
    return call(this, a1, a2, a3);
}

RED4EXT_INLINE RED4ext::vehicle::PID::IntegralState RED4ext::vehicle::PID::Process(float a1, float a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::PID::Process)> call(vehicle_PID_Process_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE void RED4ext::vehicle::PID::Reset(float a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::PID::Reset)> call(vehicle_PID_Reset_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::vehicle::PID::UpdatePID(float a1, float a2, float a3) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::PID::UpdatePID)> call(vehicle_PID_UpdatePID_Addr);
    return call(this, a1, a2, a3);
}

RED4EXT_INLINE void RED4ext::vehicle::PersistentDataPS::ResetQuestEnforceTransform() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::PersistentDataPS::ResetQuestEnforceTransform)> call(vehicle_PersistentDataPS_ResetQuestEnforceTransform_Addr);
    return call(this);
}

RED4EXT_INLINE void RED4ext::vehicle::PersistentDataPS::UpdateWheelRuntime(uint32_t a1, RED4ext::vehicle::WheelRuntimePSData* a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::PersistentDataPS::UpdateWheelRuntime)> call(vehicle_PersistentDataPS_UpdateWheelRuntime_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE void RED4ext::vehicle::Physics::ComputeSleep(float a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Physics::ComputeSleep)> call(vehicle_Physics_ComputeSleep_Addr);
    return call(this, a1);
}

RED4EXT_INLINE bool RED4ext::vehicle::Physics::GetSomethingWaterParams() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Physics::GetSomethingWaterParams)> call(vehicle_Physics_GetSomethingWaterParams_Addr);
    return call(this);
}

RED4EXT_INLINE RED4ext::vehicle::BaseObject* RED4ext::vehicle::Physics::GetVehicle() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Physics::GetVehicle)> call(vehicle_Physics_GetVehicle_Addr);
    return call(this);
}

RED4EXT_INLINE bool RED4ext::vehicle::Physics::IsInAirFromVehicle_func() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Physics::IsInAirFromVehicle_func)> call(vehicle_Physics_IsInAirFromVehicle_func_Addr);
    return call(this);
}

RED4EXT_INLINE double RED4ext::vehicle::Physics::LoadHasBeenFlippedOver(RED4ext::Handle<RED4ext::game::data::VehicleDriveModelData_Record>* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Physics::LoadHasBeenFlippedOver)> call(vehicle_Physics_LoadHasBeenFlippedOver_Addr);
    return call(this, a1);
}

RED4EXT_INLINE bool RED4ext::vehicle::Physics::ReadWorldTransform(RED4ext::WorldTransform* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Physics::ReadWorldTransform)> call(vehicle_Physics_ReadWorldTransform_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::vehicle::Physics::SetUnkA0ToOne() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Physics::SetUnkA0ToOne)> call(vehicle_Physics_SetUnkA0ToOne_Addr);
    return call(this);
}

RED4EXT_INLINE void RED4ext::vehicle::Physics::UpdateDataWorldTransform(RED4ext::WorldTransform* a1, bool a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Physics::UpdateDataWorldTransform)> call(vehicle_Physics_UpdateDataWorldTransform_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE void RED4ext::vehicle::PhysicsData::AddTorque(RED4ext::Vector3* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::PhysicsData::AddTorque)> call(vehicle_PhysicsData_AddTorque_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::vehicle::PhysicsData::ApplyForceAtPosition(RED4ext::Vector3* a1, RED4ext::Vector3* a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::PhysicsData::ApplyForceAtPosition)> call(vehicle_PhysicsData_ApplyForceAtPosition_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE void RED4ext::vehicle::PhysicsData::ApplyTorqueAtPosition(RED4ext::Vector3* a1, RED4ext::Vector3* a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::PhysicsData::ApplyTorqueAtPosition)> call(vehicle_PhysicsData_ApplyTorqueAtPosition_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE void RED4ext::vehicle::PhysicsData::SetUsesNormalChassisMass() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::PhysicsData::SetUsesNormalChassisMass)> call(vehicle_PhysicsData_SetUsesNormalChassisMass_Addr);
    return call(this);
}

RED4EXT_INLINE void RED4ext::vehicle::PhysicsData::UpdateChassis() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::PhysicsData::UpdateChassis)> call(vehicle_PhysicsData_UpdateChassis_Addr);
    return call(this);
}

RED4EXT_INLINE bool RED4ext::vehicle::PhysicsData::UsesAlternativeChassisMass() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::PhysicsData::UsesAlternativeChassisMass)> call(vehicle_PhysicsData_UsesAlternativeChassisMass_Addr);
    return call(this);
}

RED4EXT_INLINE RED4ext::Vector4* RED4ext::vehicle::TPPCameraComponent::GetLocationFromOffset(RED4ext::Vector4* a1, RED4ext::Vector3* a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::TPPCameraComponent::GetLocationFromOffset)> call(vehicle_TPPCameraComponent_GetLocationFromOffset_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE void RED4ext::vehicle::TPPCameraComponent::GetYaw(float* a1, RED4ext::Vector4* a2, float a3) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::TPPCameraComponent::GetYaw)> call(vehicle_TPPCameraComponent_GetYaw_Addr);
    return call(this, a1, a2, a3);
}

RED4EXT_INLINE void RED4ext::vehicle::TPPCameraComponent::TargetedCameraInterface_Update(float* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::TPPCameraComponent::TargetedCameraInterface_Update)> call(vehicle_TPPCameraComponent_TargetedCameraInterface_Update_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::vehicle::TPPCameraComponent::TargetedCameraInterface_sub_58() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::TPPCameraComponent::TargetedCameraInterface_sub_58)> call(vehicle_TPPCameraComponent_TargetedCameraInterface_sub_58_Addr);
    return call(this);
}

RED4EXT_INLINE int64_t RED4ext::vehicle::TPPCameraComponent::UpdateData(void* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::TPPCameraComponent::UpdateData)> call(vehicle_TPPCameraComponent_UpdateData_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::vehicle::TPPCameraComponent::UpdatePitch(RED4ext::Vector4* a1, RED4ext::Vector3* a2, RED4ext::vehicle::TPPCameraUpdate* a3) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::TPPCameraComponent::UpdatePitch)> call(vehicle_TPPCameraComponent_UpdatePitch_Addr);
    return call(this, a1, a2, a3);
}

RED4EXT_INLINE void RED4ext::vehicle::TPPCameraComponent::UpdatePosition(RED4ext::vehicle::TPPCameraUpdate* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::TPPCameraComponent::UpdatePosition)> call(vehicle_TPPCameraComponent_UpdatePosition_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::vehicle::TPPCameraComponent::UpdateTPP() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::TPPCameraComponent::UpdateTPP)> call(vehicle_TPPCameraComponent_UpdateTPP_Addr);
    return call(this);
}

RED4EXT_INLINE void RED4ext::vehicle::Unk568::CopyOverCollisionForce() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Unk568::CopyOverCollisionForce)> call(vehicle_Unk568_CopyOverCollisionForce_Addr);
    return call(this);
}

RED4EXT_INLINE int64_t RED4ext::vehicle::Unk568::SetAcceleration(RED4ext::Vector4* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Unk568::SetAcceleration)> call(vehicle_Unk568_SetAcceleration_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::vehicle::Unk568::SetLinearVelocityEtc(RED4ext::Vector4* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Unk568::SetLinearVelocityEtc)> call(vehicle_Unk568_SetLinearVelocityEtc_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::vehicle::Unk568::SetUnkD0(void* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Unk568::SetUnkD0)> call(vehicle_Unk568_SetUnkD0_Addr);
    return call(this, a1);
}

//RED4EXT_INLINE void RED4ext::vehicle::Unk568::Unk568() {
//    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Unk568::Unk568)> call(vehicle_Unk568_Unk568_Addr);
//    return call(this);
//}

RED4EXT_INLINE RED4ext::vehicle::Unk570::CollisionFxLookup* RED4ext::vehicle::Unk570::GetCollisionFxForMaterial(RED4ext::CName a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Unk570::GetCollisionFxForMaterial)> call(vehicle_Unk570_GetCollisionFxForMaterial_Addr);
    return call(this, a1);
}

RED4EXT_INLINE RED4ext::vehicle::MaterialFx* RED4ext::vehicle::Unk570::GetFxForMaterial(RED4ext::CName a1, bool a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Unk570::GetFxForMaterial)> call(vehicle_Unk570_GetFxForMaterial_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE RED4ext::vehicle::Unk570::SmearFxLookup* RED4ext::vehicle::Unk570::GetSmearFxForMaterial(RED4ext::CName a1, bool a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Unk570::GetSmearFxForMaterial)> call(vehicle_Unk570_GetSmearFxForMaterial_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE void RED4ext::vehicle::Unk570::ProcessEffects(uint32_t a1, RED4ext::vehicle::Unk570::Unk40* a2, float a3) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Unk570::ProcessEffects)> call(vehicle_Unk570_ProcessEffects_Addr);
    return call(this, a1, a2, a3);
}

RED4EXT_INLINE void RED4ext::vehicle::Unk570::ProcessImpactScratch(RED4ext::Vector3* a1, RED4ext::Vector3* a2, RED4ext::Vector3* a3, RED4ext::Vector3* a4, float a5, float a6, RED4ext::CName a7) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Unk570::ProcessImpactScratch)> call(vehicle_Unk570_ProcessImpactScratch_Addr);
    return call(this, a1, a2, a3, a4, a5, a6, a7);
}

RED4EXT_INLINE void RED4ext::vehicle::Unk570::Setup(int64_t a1, int64_t a2, int64_t a3) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Unk570::Setup)> call(vehicle_Unk570_Setup_Addr);
    return call(this, a1, a2, a3);
}

RED4EXT_INLINE bool RED4ext::vehicle::Unk570::SkidMarkEffectStart(RED4ext::vehicle::Unk570::Unk30* a1, RED4ext::vehicle::MaterialFx* a2, RED4ext::Transform* a3, RED4ext::Transform* a4, bool a5, bool a6, bool a7) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Unk570::SkidMarkEffectStart)> call(vehicle_Unk570_SkidMarkEffectStart_Addr);
    return call(this, a1, a2, a3, a4, a5, a6, a7);
}

RED4EXT_INLINE bool RED4ext::vehicle::Unk570::TireTrackEffectStart(RED4ext::vehicle::Unk570::Unk30* a1, RED4ext::vehicle::MaterialFx* a2, RED4ext::Transform* a3, RED4ext::Transform* a4, bool a5, bool a6, bool a7) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Unk570::TireTrackEffectStart)> call(vehicle_Unk570_TireTrackEffectStart_Addr);
    return call(this, a1, a2, a3, a4, a5, a6, a7);
}

RED4EXT_INLINE void RED4ext::vehicle::Unk570::UpdateEffectsBlackboard(uint32_t a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Unk570::UpdateEffectsBlackboard)> call(vehicle_Unk570_UpdateEffectsBlackboard_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::vehicle::Unk570::WheelEffectUpdate(uint32_t a1, RED4ext::vehicle::Unk570::Unk40* a2, float a3) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Unk570::WheelEffectUpdate)> call(vehicle_Unk570_WheelEffectUpdate_Addr);
    return call(this, a1, a2, a3);
}

RED4EXT_INLINE void* RED4ext::vehicle::Unk580::GetAudioResourceMetadata(void* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Unk580::GetAudioResourceMetadata)> call(vehicle_Unk580_GetAudioResourceMetadata_Addr);
    return call(this, a1);
}

RED4EXT_INLINE bool RED4ext::vehicle::Unk580::IsRadioReceiverActive() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Unk580::IsRadioReceiverActive)> call(vehicle_Unk580_IsRadioReceiverActive_Addr);
    return call(this);
}

RED4EXT_INLINE void RED4ext::vehicle::Unk580::NextRadioReceiverStation(uint32_t a1, bool a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Unk580::NextRadioReceiverStation)> call(vehicle_Unk580_NextRadioReceiverStation_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE int64_t RED4ext::vehicle::Unk580::SetRadioTier(int32_t a1, bool a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Unk580::SetRadioTier)> call(vehicle_Unk580_SetRadioTier_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE bool RED4ext::vehicle::Unk580::ShouldUseSomeAVListener() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Unk580::ShouldUseSomeAVListener)> call(vehicle_Unk580_ShouldUseSomeAVListener_Addr);
    return call(this);
}

RED4EXT_INLINE void RED4ext::vehicle::Unk580::ToggleHorn(bool a1, uint8_t* a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Unk580::ToggleHorn)> call(vehicle_Unk580_ToggleHorn_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE void RED4ext::vehicle::Unk580::Update(int64_t a1, float a2, uint64_t* a3) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Unk580::Update)> call(vehicle_Unk580_Update_Addr);
    return call(this, a1, a2, a3);
}

RED4EXT_INLINE void RED4ext::vehicle::Unk580::Update3CA(bool a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Unk580::Update3CA)> call(vehicle_Unk580_Update3CA_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::vehicle::Unk580::UpdateEvents(RED4ext::vehicle::WheelUpdate* a1, int64_t a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Unk580::UpdateEvents)> call(vehicle_Unk580_UpdateEvents_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE void RED4ext::vehicle::Unk580::UpdateTireParameters(RED4ext::vehicle::TireParameterUpdate* a1, RED4ext::vehicle::TireUpdate* a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Unk580::UpdateTireParameters)> call(vehicle_Unk580_UpdateTireParameters_Addr);
    return call(a1, a2);
}

RED4EXT_INLINE int64_t RED4ext::vehicle::Unk580::UpdateWheelEmitters(int64_t a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Unk580::UpdateWheelEmitters)> call(vehicle_Unk580_UpdateWheelEmitters_Addr);
    return call(this, a1);
}

RED4EXT_INLINE int64_t RED4ext::vehicle::Unk588::Unknown(RED4ext::vehicle::BaseObject* a1, int64_t a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Unk588::Unknown)> call(vehicle_Unk588_Unknown_Addr);
    return call(this, a1, a2);
}

RED4EXT_INLINE void RED4ext::vehicle::Unk588::UpdateTransform(RED4ext::Transform* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::Unk588::UpdateTransform)> call(vehicle_Unk588_UpdateTransform_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::vehicle::UnkD10::Reset(int32_t a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::UnkD10::Reset)> call(vehicle_UnkD10_Reset_Addr);
    return call(this, a1);
}

RED4EXT_INLINE double RED4ext::vehicle::WheeledPhysics::ApplyWaterResistance(void* a1, float a2) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::WheeledPhysics::ApplyWaterResistance)> call(vehicle_WheeledPhysics_ApplyWaterResistance_Addr);
    return call(a1, a2);
}

RED4EXT_INLINE void RED4ext::vehicle::WheeledPhysics::FixedUpdate(int64_t a1, int64_t a2, int64_t a3, int64_t a4) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::WheeledPhysics::FixedUpdate)> call(vehicle_WheeledPhysics_FixedUpdate_Addr);
    return call(a1, a2, a3, a4);
}

RED4EXT_INLINE void RED4ext::vehicle::WheeledPhysics::FourWheelTorque(uint8_t a1, uint8_t a2, float a3, RED4ext::Transform* a4) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::WheeledPhysics::FourWheelTorque)> call(vehicle_WheeledPhysics_FourWheelTorque_Addr);
    return call(this, a1, a2, a3, a4);
}

RED4EXT_INLINE float* RED4ext::vehicle::WheeledPhysics::FourWheelTorqueStuff(float a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::WheeledPhysics::FourWheelTorqueStuff)> call(vehicle_WheeledPhysics_FourWheelTorqueStuff_Addr);
    return call(this, a1);
}

RED4EXT_INLINE float RED4ext::vehicle::WheeledPhysics::GetEnergy() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::WheeledPhysics::GetEnergy)> call(vehicle_WheeledPhysics_GetEnergy_Addr);
    return call(this);
}

RED4EXT_INLINE int64_t RED4ext::vehicle::WheeledPhysics::GetNumberOfWheelsTouchingGround() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::WheeledPhysics::GetNumberOfWheelsTouchingGround)> call(vehicle_WheeledPhysics_GetNumberOfWheelsTouchingGround_Addr);
    return call(this);
}

RED4EXT_INLINE void RED4ext::vehicle::WheeledPhysics::ProcessAirControl(float a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::WheeledPhysics::ProcessAirControl)> call(vehicle_WheeledPhysics_ProcessAirControl_Addr);
    return call(this, a1);
}

RED4EXT_INLINE int64_t RED4ext::vehicle::WheeledPhysics::SetIsMovingOthers(bool a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::WheeledPhysics::SetIsMovingOthers)> call(vehicle_WheeledPhysics_SetIsMovingOthers_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::vehicle::WheeledPhysics::SetupInsert() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::WheeledPhysics::SetupInsert)> call(vehicle_WheeledPhysics_SetupInsert_Addr);
    return call(this);
}

RED4EXT_INLINE void RED4ext::vehicle::WheeledPhysics::SomethingWheelRayTrace(uint32_t a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::WheeledPhysics::SomethingWheelRayTrace)> call(vehicle_WheeledPhysics_SomethingWheelRayTrace_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::vehicle::WheeledPhysics::SomethingWheels(float a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::WheeledPhysics::SomethingWheels)> call(vehicle_WheeledPhysics_SomethingWheels_Addr);
    return call(this, a1);
}

RED4EXT_INLINE void RED4ext::vehicle::WheeledPhysics::TurningRollFactorStuff(float a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::WheeledPhysics::TurningRollFactorStuff)> call(vehicle_WheeledPhysics_TurningRollFactorStuff_Addr);
    return call(this, a1);
}

RED4EXT_INLINE float RED4ext::vehicle::WheeledPhysics::Unk15CStuff() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::WheeledPhysics::Unk15CStuff)> call(vehicle_WheeledPhysics_Unk15CStuff_Addr);
    return call(this);
}

RED4EXT_INLINE void RED4ext::vehicle::WheeledPhysics::Update() {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::WheeledPhysics::Update)> call(vehicle_WheeledPhysics_Update_Addr);
    return call(this);
}

RED4EXT_INLINE void RED4ext::vehicle::WheeledPhysics::UpdatePassengerAnim(RED4ext::anim::AnimFeature_VehiclePassenger* a1) {
    RED4ext::RelocFunc<decltype(&RED4ext::vehicle::WheeledPhysics::UpdatePassengerAnim)> call(vehicle_WheeledPhysics_UpdatePassengerAnim_Addr);
    return call(this, a1);
}

RED4EXT_INLINE uint32_t RED4ext::world::RuntimeScene::SetupWithLogging(uint8_t* a1, int64_t a2, uint32_t* a3) {
    RED4ext::RelocFunc<decltype(&RED4ext::world::RuntimeScene::SetupWithLogging)> call(world_RuntimeScene_SetupWithLogging_Addr);
    return call(this, a1, a2, a3);
}

